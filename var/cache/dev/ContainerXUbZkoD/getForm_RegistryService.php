<?php

namespace ContainerXUbZkoD;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getForm_RegistryService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'form.registry' shared service.
     *
     * @return \Symfony\Component\Form\FormRegistry
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form'.\DIRECTORY_SEPARATOR.'FormRegistryInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form'.\DIRECTORY_SEPARATOR.'FormRegistry.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form'.\DIRECTORY_SEPARATOR.'FormExtensionInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form'.\DIRECTORY_SEPARATOR.'Extension'.\DIRECTORY_SEPARATOR.'DependencyInjection'.\DIRECTORY_SEPARATOR.'DependencyInjectionExtension.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form'.\DIRECTORY_SEPARATOR.'ResolvedFormTypeFactoryInterface.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form'.\DIRECTORY_SEPARATOR.'Extension'.\DIRECTORY_SEPARATOR.'DataCollector'.\DIRECTORY_SEPARATOR.'Proxy'.\DIRECTORY_SEPARATOR.'ResolvedTypeFactoryDataCollectorProxy.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'form'.\DIRECTORY_SEPARATOR.'ResolvedFormTypeFactory.php';

        return $container->privates['form.registry'] = new \Symfony\Component\Form\FormRegistry([0 => new \Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'App\\Form\\CategoryType' => ['privates', 'App\\Form\\CategoryType', 'getCategoryTypeService', true],
            'App\\Form\\CompaignType' => ['privates', 'App\\Form\\CompaignType', 'getCompaignTypeService', true],
            'App\\Form\\CountryType' => ['privates', 'App\\Form\\CountryType', 'getCountryTypeService', true],
            'App\\Form\\GeographicalSystemType' => ['privates', 'App\\Form\\GeographicalSystemType', 'getGeographicalSystemTypeService', true],
            'App\\Form\\InterestType' => ['privates', 'App\\Form\\InterestType', 'getInterestTypeService', true],
            'App\\Form\\LanguageType' => ['privates', 'App\\Form\\LanguageType', 'getLanguageTypeService', true],
            'App\\Form\\LinkCaptureType' => ['privates', 'App\\Form\\LinkCaptureType', 'getLinkCaptureTypeService', true],
            'App\\Form\\LinkType' => ['privates', 'App\\Form\\LinkType', 'getLinkTypeService', true],
            'App\\Form\\MediaGeographicalSystemType' => ['privates', 'App\\Form\\MediaGeographicalSystemType', 'getMediaGeographicalSystemTypeService', true],
            'App\\Form\\MediaInterestType' => ['privates', 'App\\Form\\MediaInterestType', 'getMediaInterestTypeService', true],
            'App\\Form\\MediaLanguagesType' => ['privates', 'App\\Form\\MediaLanguagesType', 'getMediaLanguagesTypeService', true],
            'App\\Form\\MediaSocialNetworkType' => ['privates', 'App\\Form\\MediaSocialNetworkType', 'getMediaSocialNetworkTypeService', true],
            'App\\Form\\MediaType' => ['privates', 'App\\Form\\MediaType', 'getMediaTypeService', true],
            'App\\Form\\Search\\CategorySearchType' => ['privates', 'App\\Form\\Search\\CategorySearchType', 'getCategorySearchTypeService', true],
            'App\\Form\\Search\\CompaignSearchType' => ['privates', 'App\\Form\\Search\\CompaignSearchType', 'getCompaignSearchTypeService', true],
            'App\\Form\\Search\\CountrySearchType' => ['privates', 'App\\Form\\Search\\CountrySearchType', 'getCountrySearchTypeService', true],
            'App\\Form\\Search\\GeographicalSystemSearchType' => ['privates', 'App\\Form\\Search\\GeographicalSystemSearchType', 'getGeographicalSystemSearchTypeService', true],
            'App\\Form\\Search\\InterestSearchType' => ['privates', 'App\\Form\\Search\\InterestSearchType', 'getInterestSearchTypeService', true],
            'App\\Form\\Search\\LanguageSearchType' => ['privates', 'App\\Form\\Search\\LanguageSearchType', 'getLanguageSearchTypeService', true],
            'App\\Form\\Search\\LinkSearchType' => ['privates', 'App\\Form\\Search\\LinkSearchType', 'getLinkSearchTypeService', true],
            'App\\Form\\Search\\MediaSearchType' => ['privates', 'App\\Form\\Search\\MediaSearchType', 'getMediaSearchTypeService', true],
            'App\\Form\\Search\\ReservationSearchType' => ['privates', 'App\\Form\\Search\\ReservationSearchType', 'getReservationSearchTypeService', true],
            'App\\Form\\Search\\UserSearchType' => ['privates', 'App\\Form\\Search\\UserSearchType', 'getUserSearchTypeService', true],
            'App\\Form\\SettingType' => ['privates', 'App\\Form\\SettingType', 'getSettingTypeService', true],
            'App\\Form\\Type\\AjaxUploadType' => ['privates', 'App\\Form\\Type\\AjaxUploadType', 'getAjaxUploadTypeService', true],
            'App\\Form\\Type\\FieldsetType' => ['privates', 'App\\Form\\Type\\FieldsetType', 'getFieldsetTypeService', true],
            'App\\Form\\UserType' => ['privates', 'App\\Form\\UserType', 'getUserTypeService', true],
            'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => ['privates', 'form.type.entity', 'getForm_Type_EntityService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => ['privates', 'form.type.choice', 'getForm_Type_ChoiceService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ColorType' => ['privates', 'form.type.color', 'getForm_Type_ColorService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FileType' => ['services', '.container.private.form.type.file', 'get_Container_Private_Form_Type_FileService', true],
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => ['privates', 'form.type.form', 'getForm_Type_FormService', true],
        ], [
            'App\\Form\\CategoryType' => '?',
            'App\\Form\\CompaignType' => '?',
            'App\\Form\\CountryType' => '?',
            'App\\Form\\GeographicalSystemType' => '?',
            'App\\Form\\InterestType' => '?',
            'App\\Form\\LanguageType' => '?',
            'App\\Form\\LinkCaptureType' => '?',
            'App\\Form\\LinkType' => '?',
            'App\\Form\\MediaGeographicalSystemType' => '?',
            'App\\Form\\MediaInterestType' => '?',
            'App\\Form\\MediaLanguagesType' => '?',
            'App\\Form\\MediaSocialNetworkType' => '?',
            'App\\Form\\MediaType' => '?',
            'App\\Form\\Search\\CategorySearchType' => '?',
            'App\\Form\\Search\\CompaignSearchType' => '?',
            'App\\Form\\Search\\CountrySearchType' => '?',
            'App\\Form\\Search\\GeographicalSystemSearchType' => '?',
            'App\\Form\\Search\\InterestSearchType' => '?',
            'App\\Form\\Search\\LanguageSearchType' => '?',
            'App\\Form\\Search\\LinkSearchType' => '?',
            'App\\Form\\Search\\MediaSearchType' => '?',
            'App\\Form\\Search\\ReservationSearchType' => '?',
            'App\\Form\\Search\\UserSearchType' => '?',
            'App\\Form\\SettingType' => '?',
            'App\\Form\\Type\\AjaxUploadType' => '?',
            'App\\Form\\Type\\FieldsetType' => '?',
            'App\\Form\\UserType' => '?',
            'Symfony\\Bridge\\Doctrine\\Form\\Type\\EntityType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ChoiceType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\ColorType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FileType' => '?',
            'Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => '?',
        ]), ['Symfony\\Component\\Form\\Extension\\Core\\Type\\FormType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_extension.form.transformation_failure_handling'] ?? $container->load('getForm_TypeExtension_Form_TransformationFailureHandlingService'));
            yield 1 => ($container->privates['form.type_extension.form.http_foundation'] ?? $container->load('getForm_TypeExtension_Form_HttpFoundationService'));
            yield 2 => ($container->privates['form.type_extension.form.validator'] ?? $container->load('getForm_TypeExtension_Form_ValidatorService'));
            yield 3 => ($container->privates['form.type_extension.upload.validator'] ?? $container->load('getForm_TypeExtension_Upload_ValidatorService'));
            yield 4 => ($container->privates['form.type_extension.csrf'] ?? $container->load('getForm_TypeExtension_CsrfService'));
            yield 5 => ($container->privates['form.type_extension.form.data_collector'] ?? $container->load('getForm_TypeExtension_Form_DataCollectorService'));
        }, 6), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\RepeatedType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_extension.repeated.validator'] ?? ($container->privates['form.type_extension.repeated.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension()));
        }, 1), 'Symfony\\Component\\Form\\Extension\\Core\\Type\\SubmitType' => new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_extension.submit.validator'] ?? ($container->privates['form.type_extension.submit.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension()));
        }, 1)], new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['form.type_guesser.validator'] ?? $container->load('getForm_TypeGuesser_ValidatorService'));
            yield 1 => ($container->privates['form.type_guesser.doctrine'] ?? $container->load('getForm_TypeGuesser_DoctrineService'));
        }, 2))], new \Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy(new \Symfony\Component\Form\ResolvedFormTypeFactory(), ($container->privates['data_collector.form'] ?? $container->getDataCollector_FormService())));
    }
}
