<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Country extends \App\Entity\Country implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'countrycode', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'countryname', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'currencycode', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'fipscode', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'isonumeric', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'north', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'south', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'east', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'west', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'capital', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'continentname', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'continent', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'languages', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'isoalpha3', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'geonameid', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'telephoneprefix'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'countrycode', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'countryname', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'currencycode', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'fipscode', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'isonumeric', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'north', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'south', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'east', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'west', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'capital', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'continentname', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'continent', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'languages', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'isoalpha3', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'geonameid', '' . "\0" . 'App\\Entity\\Country' . "\0" . 'telephoneprefix'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Country $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getCountrycode(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountrycode', []);

        return parent::getCountrycode();
    }

    /**
     * {@inheritDoc}
     */
    public function setCountrycode(string $countrycode): \App\Entity\Country
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountrycode', [$countrycode]);

        return parent::setCountrycode($countrycode);
    }

    /**
     * {@inheritDoc}
     */
    public function getCountryname(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountryname', []);

        return parent::getCountryname();
    }

    /**
     * {@inheritDoc}
     */
    public function setCountryname(string $countryname): \App\Entity\Country
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountryname', [$countryname]);

        return parent::setCountryname($countryname);
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrencycode(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrencycode', []);

        return parent::getCurrencycode();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurrencycode(?string $currencycode): \App\Entity\Country
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurrencycode', [$currencycode]);

        return parent::setCurrencycode($currencycode);
    }

    /**
     * {@inheritDoc}
     */
    public function getFipscode(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFipscode', []);

        return parent::getFipscode();
    }

    /**
     * {@inheritDoc}
     */
    public function setFipscode(?string $fipscode): \App\Entity\Country
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFipscode', [$fipscode]);

        return parent::setFipscode($fipscode);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsonumeric(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsonumeric', []);

        return parent::getIsonumeric();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsonumeric(?string $isonumeric): \App\Entity\Country
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsonumeric', [$isonumeric]);

        return parent::setIsonumeric($isonumeric);
    }

    /**
     * {@inheritDoc}
     */
    public function getNorth(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNorth', []);

        return parent::getNorth();
    }

    /**
     * {@inheritDoc}
     */
    public function setNorth(?string $north): \App\Entity\Country
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNorth', [$north]);

        return parent::setNorth($north);
    }

    /**
     * {@inheritDoc}
     */
    public function getSouth(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSouth', []);

        return parent::getSouth();
    }

    /**
     * {@inheritDoc}
     */
    public function setSouth(?string $south): \App\Entity\Country
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSouth', [$south]);

        return parent::setSouth($south);
    }

    /**
     * {@inheritDoc}
     */
    public function getEast(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEast', []);

        return parent::getEast();
    }

    /**
     * {@inheritDoc}
     */
    public function setEast(?string $east): \App\Entity\Country
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEast', [$east]);

        return parent::setEast($east);
    }

    /**
     * {@inheritDoc}
     */
    public function getWest(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWest', []);

        return parent::getWest();
    }

    /**
     * {@inheritDoc}
     */
    public function setWest(?string $west): \App\Entity\Country
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWest', [$west]);

        return parent::setWest($west);
    }

    /**
     * {@inheritDoc}
     */
    public function getCapital(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCapital', []);

        return parent::getCapital();
    }

    /**
     * {@inheritDoc}
     */
    public function setCapital(?string $capital): \App\Entity\Country
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCapital', [$capital]);

        return parent::setCapital($capital);
    }

    /**
     * {@inheritDoc}
     */
    public function getContinentname(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContinentname', []);

        return parent::getContinentname();
    }

    /**
     * {@inheritDoc}
     */
    public function setContinentname(?string $continentname): \App\Entity\Country
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContinentname', [$continentname]);

        return parent::setContinentname($continentname);
    }

    /**
     * {@inheritDoc}
     */
    public function getContinent(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContinent', []);

        return parent::getContinent();
    }

    /**
     * {@inheritDoc}
     */
    public function setContinent(?string $continent): \App\Entity\Country
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContinent', [$continent]);

        return parent::setContinent($continent);
    }

    /**
     * {@inheritDoc}
     */
    public function getLanguages(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLanguages', []);

        return parent::getLanguages();
    }

    /**
     * {@inheritDoc}
     */
    public function setLanguages(?string $languages): \App\Entity\Country
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLanguages', [$languages]);

        return parent::setLanguages($languages);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsoalpha3(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsoalpha3', []);

        return parent::getIsoalpha3();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsoalpha3(?string $isoalpha3): \App\Entity\Country
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsoalpha3', [$isoalpha3]);

        return parent::setIsoalpha3($isoalpha3);
    }

    /**
     * {@inheritDoc}
     */
    public function getGeonameid(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGeonameid', []);

        return parent::getGeonameid();
    }

    /**
     * {@inheritDoc}
     */
    public function setGeonameid(?int $geonameid): \App\Entity\Country
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGeonameid', [$geonameid]);

        return parent::setGeonameid($geonameid);
    }

    /**
     * {@inheritDoc}
     */
    public function getTelephoneprefix(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTelephoneprefix', []);

        return parent::getTelephoneprefix();
    }

    /**
     * {@inheritDoc}
     */
    public function setTelephoneprefix(string $telephoneprefix): \App\Entity\Country
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTelephoneprefix', [$telephoneprefix]);

        return parent::setTelephoneprefix($telephoneprefix);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

}
