<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23setContainer' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23getParameter' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23getSubscribedServices' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23has' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23get' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23generateUrl' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23forward' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23redirect' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23redirectToRoute' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23json' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23file' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23addFlash' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23isGranted' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23denyAccessUnlessGranted' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23renderView' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23render' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23renderForm' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23stream' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23createNotFoundException' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23createAccessDeniedException' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23createForm' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23createFormBuilder' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23getDoctrine' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23getUser' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23isCsrfTokenValid' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23dispatchMessage' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%23addLink' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CAbstractController%24container' => 0,
'App%5CController%5CAdmin%5CCategoryController' => 0,
'App%5CController%5CAdmin%5CCategoryController%23index' => 1,
'App%5CController%5CAdmin%5CCategoryController%23table' => 2,
'App%5CController%5CAdmin%5CCategoryController%23details' => 3,
'App%5CController%5CAdmin%5CCategoryController%23create' => 4,
'App%5CController%5CAdmin%5CCategoryController%23update' => 5,
'App%5CController%5CAdmin%5CCategoryController%23store' => 6,
'App%5CController%5CAdmin%5CCategoryController%23delete' => 7,
'App%5CController%5CAdmin%5CCategoryController%23getTable' => 0,
'App%5CController%5CAdmin%5CCategoryController%23getTableQuery' => 0,
'App%5CController%5CAdmin%5CCategoryController%23getForm' => 0,
'App%5CController%5CAdmin%5CCategoryController%23getSearchForm' => 0,
'App%5CController%5CBaseController%23getProjectDir' => 0,
'App%5CController%5CBaseController%23removeFile' => 0,
'App%5CController%5CBaseController%23getSingleFileUpload' => 0,
'App%5CController%5CAdmin%5CCompaignController' => 0,
'App%5CController%5CAdmin%5CCompaignController%23index' => 8,
'App%5CController%5CAdmin%5CCompaignController%23table' => 9,
'App%5CController%5CAdmin%5CCompaignController%23export' => 10,
'App%5CController%5CAdmin%5CCompaignController%23details' => 11,
'App%5CController%5CAdmin%5CCompaignController%23create' => 12,
'App%5CController%5CAdmin%5CCompaignController%23update' => 13,
'App%5CController%5CAdmin%5CCompaignController%23store' => 14,
'App%5CController%5CAdmin%5CCompaignController%23delete' => 15,
'App%5CController%5CAdmin%5CCompaignController%23getTable' => 0,
'App%5CController%5CAdmin%5CCompaignController%23getTableQuery' => 0,
'App%5CController%5CAdmin%5CCompaignController%23getForm' => 0,
'App%5CController%5CAdmin%5CCompaignController%23getSearchForm' => 0,
'App%5CController%5CAdmin%5CCountryController' => 0,
'App%5CController%5CAdmin%5CCountryController%23index' => 16,
'App%5CController%5CAdmin%5CCountryController%23table' => 17,
'App%5CController%5CAdmin%5CCountryController%23details' => 18,
'App%5CController%5CAdmin%5CCountryController%23create' => 19,
'App%5CController%5CAdmin%5CCountryController%23update' => 20,
'App%5CController%5CAdmin%5CCountryController%23store' => 21,
'App%5CController%5CAdmin%5CCountryController%23delete' => 22,
'App%5CController%5CAdmin%5CCountryController%23getTable' => 0,
'App%5CController%5CAdmin%5CCountryController%23getTableQuery' => 0,
'App%5CController%5CAdmin%5CCountryController%23getForm' => 0,
'App%5CController%5CAdmin%5CCountryController%23getSearchForm' => 0,
'App%5CController%5CAdmin%5CCronJobsController' => 0,
'App%5CController%5CAdmin%5CCronJobsController%23index' => 23,
'App%5CController%5CAdmin%5CCronJobsController%23changeStatus' => 24,
'App%5CController%5CAdmin%5CCronJobsController%23table' => 25,
'App%5CController%5CAdmin%5CCronJobsController%23getTable' => 0,
'App%5CController%5CAdmin%5CCronJobsController%23getTableQuery' => 0,
'App%5CController%5CAdmin%5CFileController' => 0,
'App%5CController%5CAdmin%5CFileController%23upload' => 26,
'App%5CController%5CAdmin%5CGeographicalSystemController' => 0,
'App%5CController%5CAdmin%5CGeographicalSystemController%23index' => 27,
'App%5CController%5CAdmin%5CGeographicalSystemController%23table' => 28,
'App%5CController%5CAdmin%5CGeographicalSystemController%23create' => 29,
'App%5CController%5CAdmin%5CGeographicalSystemController%23update' => 30,
'App%5CController%5CAdmin%5CGeographicalSystemController%23store' => 31,
'App%5CController%5CAdmin%5CGeographicalSystemController%23delete' => 32,
'App%5CController%5CAdmin%5CGeographicalSystemController%23getTable' => 0,
'App%5CController%5CAdmin%5CGeographicalSystemController%23getTableQuery' => 0,
'App%5CController%5CAdmin%5CGeographicalSystemController%23getForm' => 0,
'App%5CController%5CAdmin%5CGeographicalSystemController%23getSearchForm' => 0,
'App%5CController%5CAdmin%5CImageController' => 0,
'App%5CController%5CAdmin%5CImageController%23upload' => 33,
'App%5CController%5CAdmin%5CInterestController' => 0,
'App%5CController%5CAdmin%5CInterestController%23index' => 34,
'App%5CController%5CAdmin%5CInterestController%23table' => 35,
'App%5CController%5CAdmin%5CInterestController%23details' => 36,
'App%5CController%5CAdmin%5CInterestController%23create' => 37,
'App%5CController%5CAdmin%5CInterestController%23update' => 38,
'App%5CController%5CAdmin%5CInterestController%23store' => 39,
'App%5CController%5CAdmin%5CInterestController%23delete' => 40,
'App%5CController%5CAdmin%5CInterestController%23getTable' => 0,
'App%5CController%5CAdmin%5CInterestController%23getTableQuery' => 0,
'App%5CController%5CAdmin%5CInterestController%23getForm' => 0,
'App%5CController%5CAdmin%5CInterestController%23getSearchForm' => 0,
'App%5CController%5CAdmin%5CLanguageController' => 0,
'App%5CController%5CAdmin%5CLanguageController%23index' => 41,
'App%5CController%5CAdmin%5CLanguageController%23table' => 42,
'App%5CController%5CAdmin%5CLanguageController%23details' => 43,
'App%5CController%5CAdmin%5CLanguageController%23create' => 44,
'App%5CController%5CAdmin%5CLanguageController%23update' => 45,
'App%5CController%5CAdmin%5CLanguageController%23store' => 46,
'App%5CController%5CAdmin%5CLanguageController%23delete' => 47,
'App%5CController%5CAdmin%5CLanguageController%23getTable' => 0,
'App%5CController%5CAdmin%5CLanguageController%23getTableQuery' => 0,
'App%5CController%5CAdmin%5CLanguageController%23getForm' => 0,
'App%5CController%5CAdmin%5CLanguageController%23getSearchForm' => 0,
'App%5CController%5CAdmin%5CLinkCaptureController' => 0,
'App%5CController%5CAdmin%5CLinkCaptureController%23index' => 48,
'App%5CController%5CAdmin%5CLinkCaptureController%23screensLinks' => 49,
'App%5CController%5CAdmin%5CLinkCaptureController%23Screens' => 50,
'App%5CController%5CAdmin%5CLinkController' => 0,
'App%5CController%5CAdmin%5CLinkController%23index' => 51,
'App%5CController%5CAdmin%5CLinkController%23check' => 52,
'App%5CController%5CAdmin%5CLinkController%23table' => 53,
'App%5CController%5CAdmin%5CLinkController%23export' => 54,
'App%5CController%5CAdmin%5CLinkController%23details' => 55,
'App%5CController%5CAdmin%5CLinkController%23screen' => 56,
'App%5CController%5CAdmin%5CLinkController%23create' => 57,
'App%5CController%5CAdmin%5CLinkController%23update' => 58,
'App%5CController%5CAdmin%5CLinkController%23store' => 59,
'App%5CController%5CAdmin%5CLinkController%23delete' => 60,
'App%5CController%5CAdmin%5CLinkController%23getTable' => 0,
'App%5CController%5CAdmin%5CLinkController%23getTableQuery' => 0,
'App%5CController%5CAdmin%5CLinkController%23getForm' => 0,
'App%5CController%5CAdmin%5CLinkController%23getSearchForm' => 0,
'App%5CController%5CAdmin%5CLogController' => 0,
'App%5CController%5CAdmin%5CLogController%23index' => 61,
'App%5CController%5CAdmin%5CLogController%23table' => 62,
'App%5CController%5CAdmin%5CLogController%23getTable' => 0,
'App%5CController%5CAdmin%5CLogController%23getTableQuery' => 0,
'App%5CController%5CAdmin%5CMailHistoryController' => 0,
'App%5CController%5CAdmin%5CMailHistoryController%23index' => 63,
'App%5CController%5CAdmin%5CMailHistoryController%23resend' => 64,
'App%5CController%5CAdmin%5CMailHistoryController%23show' => 65,
'App%5CController%5CAdmin%5CMailHistoryController%23table' => 66,
'App%5CController%5CAdmin%5CMailHistoryController%23getTable' => 0,
'App%5CController%5CAdmin%5CMailHistoryController%23getTableQuery' => 0,
'App%5CController%5CAdmin%5CMediaController' => 0,
'App%5CController%5CAdmin%5CMediaController%23__construct' => 0,
'App%5CController%5CAdmin%5CMediaController%23index' => 67,
'App%5CController%5CAdmin%5CMediaController%23table' => 68,
'App%5CController%5CAdmin%5CMediaController%23export' => 69,
'App%5CController%5CAdmin%5CMediaController%23details' => 70,
'App%5CController%5CAdmin%5CMediaController%23create' => 71,
'App%5CController%5CAdmin%5CMediaController%23update' => 72,
'App%5CController%5CAdmin%5CMediaController%23store' => 73,
'App%5CController%5CAdmin%5CMediaController%23delete' => 74,
'App%5CController%5CAdmin%5CMediaController%23getTable' => 0,
'App%5CController%5CAdmin%5CMediaController%23getTableQuery' => 0,
'App%5CController%5CAdmin%5CMediaController%23getForm' => 0,
'App%5CController%5CAdmin%5CMediaController%23getSearchForm' => 0,
'App%5CController%5CAdmin%5CMediaController%23search' => 75,
'App%5CController%5CAdmin%5CMediaController%23getWebsiteStats' => 76,
'App%5CController%5CAdmin%5CMediaController%24mediaInterestRepo' => 0,
'App%5CController%5CAdmin%5CMediaController%24mediaLanguagesRepo' => 0,
'App%5CController%5CAdmin%5CMediaController%24mediaGeographicalSystemRepo' => 0,
'App%5CController%5CAdmin%5CMediaController%24mediaSocialNetworkRepo' => 0,
'App%5CController%5CAdmin%5CReportingController' => 0,
'App%5CController%5CAdmin%5CReportingController%23index' => 77,
'App%5CController%5CAdmin%5CReportingController%23mediaCountries' => 78,
'App%5CController%5CAdmin%5CReportingController%23mediasPerCountry' => 79,
'App%5CController%5CAdmin%5CReportingController%23visitesPerDirection' => 80,
'App%5CController%5CAdmin%5CReportingController%23linksPerMedia' => 81,
'App%5CController%5CAdmin%5CReportingController%23mediasPerLanguage' => 82,
'App%5CController%5CAdmin%5CReportingController%23map' => 83,
'App%5CController%5CAdmin%5CSettingController' => 0,
'App%5CController%5CAdmin%5CSettingController%23index' => 84,
'App%5CController%5CAdmin%5CSettingController%23table' => 85,
'App%5CController%5CAdmin%5CSettingController%23create' => 86,
'App%5CController%5CAdmin%5CSettingController%23update' => 87,
'App%5CController%5CAdmin%5CSettingController%23store' => 88,
'App%5CController%5CAdmin%5CSettingController%23getTable' => 0,
'App%5CController%5CAdmin%5CSettingController%23getTableQuery' => 0,
'App%5CController%5CAdmin%5CSettingController%23getForm' => 0,
'App%5CController%5CAdmin%5CUserController' => 0,
'App%5CController%5CAdmin%5CUserController%23index' => 89,
'App%5CController%5CAdmin%5CUserController%23table' => 90,
'App%5CController%5CAdmin%5CUserController%23details' => 91,
'App%5CController%5CAdmin%5CUserController%23create' => 92,
'App%5CController%5CAdmin%5CUserController%23update' => 93,
'App%5CController%5CAdmin%5CUserController%23store' => 94,
'App%5CController%5CAdmin%5CUserController%23delete' => 95,
'App%5CController%5CAdmin%5CUserController%23getTable' => 0,
'App%5CController%5CAdmin%5CUserController%23getTableQuery' => 0,
'App%5CController%5CAdmin%5CUserController%23getSearchForm' => 0,
'App%5CController%5CAdmin%5CUserController%23getForm' => 0,
'App%5CController%5CBaseController' => 0,
'App%5CController%5CFront%5CHomeController' => 0,
'App%5CController%5CFront%5CHomeController%23index' => 96,
'App%5CController%5CFront%5CHomeController%23services' => 97,
'App%5CController%5CFront%5CHomeController%23pricing' => 98,
'App%5CController%5CFront%5CHomeController%23customers' => 99,
'App%5CController%5CFront%5CHomeController%23ressources' => 100,
'App%5CController%5CFront%5CHomeController%23contact' => 101,
'App%5CController%5CFront%5CPasswordResetController' => 0,
'App%5CController%5CFront%5CPasswordResetController%23reset' => 102,
'App%5CController%5CFront%5CPasswordResetController%23new' => 103,
'App%5CController%5CFront%5CSecurityController' => 0,
'App%5CController%5CFront%5CSecurityController%23login' => 104,
'App%5CController%5CFront%5CSecurityController%23logout' => 105,
'App%5CController%5CFront%5CSecurity%5CConnectAzureController' => 0,
'App%5CController%5CFront%5CSecurity%5CConnectAzureController%23connectAction' => 106,
'App%5CController%5CFront%5CSecurity%5CConnectAzureController%23connectCheckAction' => 107,
'App%5CEntity%5CCategory' => 108,
'App%5CEntity%5CCategory%23getId' => 0,
'App%5CEntity%5CCategory%23getName' => 0,
'App%5CEntity%5CCategory%23setName' => 0,
'App%5CEntity%5CCategory%23__toString' => 0,
'App%5CEntity%5CCategory%24id' => 109,
'App%5CEntity%5CCategory%24name' => 110,
'App%5CEntity%5CCompaign' => 111,
'App%5CEntity%5CCompaign%23getId' => 0,
'App%5CEntity%5CCompaign%23getSubject' => 0,
'App%5CEntity%5CCompaign%23setSubject' => 0,
'App%5CEntity%5CCompaign%23getBeginOn' => 0,
'App%5CEntity%5CCompaign%23setBeginOn' => 0,
'App%5CEntity%5CCompaign%23getEndOn' => 0,
'App%5CEntity%5CCompaign%23setEndOn' => 0,
'App%5CEntity%5CCompaign%23getLinksCount' => 0,
'App%5CEntity%5CCompaign%23setLinksCount' => 0,
'App%5CEntity%5CCompaign%23getMediasCount' => 0,
'App%5CEntity%5CCompaign%23setMediasCount' => 0,
'App%5CEntity%5CCompaign%23getUser' => 0,
'App%5CEntity%5CCompaign%23setUser' => 0,
'App%5CEntity%5CCompaign%23getLinks' => 0,
'App%5CEntity%5CCompaign%23addLink' => 0,
'App%5CEntity%5CCompaign%23__toString' => 0,
'App%5CEntity%5CCompaign%24id' => 109,
'App%5CEntity%5CCompaign%24subject' => 110,
'App%5CEntity%5CCompaign%24user_id' => 112,
'App%5CEntity%5CCompaign%24begin_on' => 113,
'App%5CEntity%5CCompaign%24end_on' => 113,
'App%5CEntity%5CCompaign%24links_count' => 114,
'App%5CEntity%5CCompaign%24medias_count' => 114,
'App%5CEntity%5CCompaign%24user' => 115,
'App%5CEntity%5CCompaign%24links' => 116,
'App%5CEntity%5CCountry' => 117,
'App%5CEntity%5CCountry%23getId' => 0,
'App%5CEntity%5CCountry%23getCountrycode' => 0,
'App%5CEntity%5CCountry%23setCountrycode' => 0,
'App%5CEntity%5CCountry%23getCountryname' => 0,
'App%5CEntity%5CCountry%23setCountryname' => 0,
'App%5CEntity%5CCountry%23getCurrencycode' => 0,
'App%5CEntity%5CCountry%23setCurrencycode' => 0,
'App%5CEntity%5CCountry%23getFipscode' => 0,
'App%5CEntity%5CCountry%23setFipscode' => 0,
'App%5CEntity%5CCountry%23getIsonumeric' => 0,
'App%5CEntity%5CCountry%23setIsonumeric' => 0,
'App%5CEntity%5CCountry%23getNorth' => 0,
'App%5CEntity%5CCountry%23setNorth' => 0,
'App%5CEntity%5CCountry%23getSouth' => 0,
'App%5CEntity%5CCountry%23setSouth' => 0,
'App%5CEntity%5CCountry%23getEast' => 0,
'App%5CEntity%5CCountry%23setEast' => 0,
'App%5CEntity%5CCountry%23getWest' => 0,
'App%5CEntity%5CCountry%23setWest' => 0,
'App%5CEntity%5CCountry%23getCapital' => 0,
'App%5CEntity%5CCountry%23setCapital' => 0,
'App%5CEntity%5CCountry%23getContinentname' => 0,
'App%5CEntity%5CCountry%23setContinentname' => 0,
'App%5CEntity%5CCountry%23getContinent' => 0,
'App%5CEntity%5CCountry%23setContinent' => 0,
'App%5CEntity%5CCountry%23getLanguages' => 0,
'App%5CEntity%5CCountry%23setLanguages' => 0,
'App%5CEntity%5CCountry%23getIsoalpha3' => 0,
'App%5CEntity%5CCountry%23setIsoalpha3' => 0,
'App%5CEntity%5CCountry%23getGeonameid' => 0,
'App%5CEntity%5CCountry%23setGeonameid' => 0,
'App%5CEntity%5CCountry%23getTelephoneprefix' => 0,
'App%5CEntity%5CCountry%23setTelephoneprefix' => 0,
'App%5CEntity%5CCountry%23__toString' => 0,
'App%5CEntity%5CCountry%24id' => 118,
'App%5CEntity%5CCountry%24countrycode' => 119,
'App%5CEntity%5CCountry%24countryname' => 120,
'App%5CEntity%5CCountry%24currencycode' => 121,
'App%5CEntity%5CCountry%24fipscode' => 122,
'App%5CEntity%5CCountry%24isonumeric' => 123,
'App%5CEntity%5CCountry%24north' => 124,
'App%5CEntity%5CCountry%24south' => 125,
'App%5CEntity%5CCountry%24east' => 126,
'App%5CEntity%5CCountry%24west' => 127,
'App%5CEntity%5CCountry%24capital' => 128,
'App%5CEntity%5CCountry%24continentname' => 129,
'App%5CEntity%5CCountry%24continent' => 130,
'App%5CEntity%5CCountry%24languages' => 131,
'App%5CEntity%5CCountry%24isoalpha3' => 132,
'App%5CEntity%5CCountry%24geonameid' => 133,
'App%5CEntity%5CCountry%24telephoneprefix' => 134,
'App%5CEntity%5CGeographicalSystem' => 135,
'App%5CEntity%5CGeographicalSystem%23getId' => 0,
'App%5CEntity%5CGeographicalSystem%23getName' => 0,
'App%5CEntity%5CGeographicalSystem%23setName' => 0,
'App%5CEntity%5CGeographicalSystem%23__toString' => 0,
'App%5CEntity%5CGeographicalSystem%24id' => 118,
'App%5CEntity%5CGeographicalSystem%24name' => 136,
'App%5CEntity%5CInterest' => 137,
'App%5CEntity%5CInterest%23getId' => 0,
'App%5CEntity%5CInterest%23getName' => 0,
'App%5CEntity%5CInterest%23setName' => 0,
'App%5CEntity%5CInterest%23__toString' => 0,
'App%5CEntity%5CInterest%24id' => 118,
'App%5CEntity%5CInterest%24name' => 138,
'App%5CEntity%5CLanguage' => 139,
'App%5CEntity%5CLanguage%23getId' => 0,
'App%5CEntity%5CLanguage%23getName' => 0,
'App%5CEntity%5CLanguage%23setName' => 0,
'App%5CEntity%5CLanguage%23getCode' => 0,
'App%5CEntity%5CLanguage%23setCode' => 0,
'App%5CEntity%5CLanguage%23__toString' => 0,
'App%5CEntity%5CLanguage%24id' => 109,
'App%5CEntity%5CLanguage%24name' => 110,
'App%5CEntity%5CLanguage%24code' => 110,
'App%5CEntity%5CLink' => 140,
'App%5CEntity%5CLink%23__construct' => 0,
'App%5CEntity%5CLink%23getId' => 0,
'App%5CEntity%5CLink%23getTitle' => 0,
'App%5CEntity%5CLink%23setTitle' => 0,
'App%5CEntity%5CLink%23getLink' => 0,
'App%5CEntity%5CLink%23setLink' => 0,
'App%5CEntity%5CLink%23getMediaId' => 0,
'App%5CEntity%5CLink%23setMediaId' => 0,
'App%5CEntity%5CLink%23getFileName' => 0,
'App%5CEntity%5CLink%23setFileName' => 0,
'App%5CEntity%5CLink%23getAttachment' => 0,
'App%5CEntity%5CLink%23getGeographicalScope' => 0,
'App%5CEntity%5CLink%23setGeographicalScope' => 0,
'App%5CEntity%5CLink%23getOrientation' => 0,
'App%5CEntity%5CLink%23setOrientation' => 0,
'App%5CEntity%5CLink%23getDomain' => 0,
'App%5CEntity%5CLink%23setDomain' => 0,
'App%5CEntity%5CLink%23getCategoryId' => 0,
'App%5CEntity%5CLink%23setCategoryId' => 0,
'App%5CEntity%5CLink%23getLang' => 0,
'App%5CEntity%5CLink%23setLang' => 0,
'App%5CEntity%5CLink%23getLanguageId' => 0,
'App%5CEntity%5CLink%23setLanguageId' => 0,
'App%5CEntity%5CLink%23getPublishedOn' => 0,
'App%5CEntity%5CLink%23setPublishedOn' => 0,
'App%5CEntity%5CLink%23getMedia' => 0,
'App%5CEntity%5CLink%23setMedia' => 0,
'App%5CEntity%5CLink%23getCategory' => 0,
'App%5CEntity%5CLink%23setCategory' => 0,
'App%5CEntity%5CLink%23getUser' => 0,
'App%5CEntity%5CLink%23setUser' => 0,
'App%5CEntity%5CLink%23getCompaign' => 0,
'App%5CEntity%5CLink%23setCompaign' => 0,
'App%5CEntity%5CLink%23getLanguage' => 0,
'App%5CEntity%5CLink%23setLanguage' => 0,
'App%5CEntity%5CLink%23__toString' => 0,
'App%5CEntity%5CLink%23extractDomain' => 0,
'App%5CEntity%5CLink%23getStatus' => 0,
'App%5CEntity%5CLink%23setStatus' => 0,
'App%5CEntity%5CLink%24id' => 109,
'App%5CEntity%5CLink%24title' => 110,
'App%5CEntity%5CLink%24link' => 110,
'App%5CEntity%5CLink%24media_id' => 141,
'App%5CEntity%5CLink%24file_name' => 142,
'App%5CEntity%5CLink%24geographical_scope' => 143,
'App%5CEntity%5CLink%24orientation' => 110,
'App%5CEntity%5CLink%24category_id' => 112,
'App%5CEntity%5CLink%24user_id' => 112,
'App%5CEntity%5CLink%24compaign_id' => 112,
'App%5CEntity%5CLink%24language_id' => 112,
'App%5CEntity%5CLink%24country_id' => 112,
'App%5CEntity%5CLink%24domain' => 144,
'App%5CEntity%5CLink%24lang' => 145,
'App%5CEntity%5CLink%24published_on' => 146,
'App%5CEntity%5CLink%24media' => 147,
'App%5CEntity%5CLink%24category' => 148,
'App%5CEntity%5CLink%24user' => 115,
'App%5CEntity%5CLink%24compaign' => 149,
'App%5CEntity%5CLink%24language' => 150,
'App%5CEntity%5CLink%24status' => 151,
'App%5CEntity%5CLinkCapture' => 152,
'App%5CEntity%5CLinkCapture%23getId' => 0,
'App%5CEntity%5CLinkCapture%23getLink' => 0,
'App%5CEntity%5CLinkCapture%23setLink' => 0,
'App%5CEntity%5CLinkCapture%23getStatus' => 0,
'App%5CEntity%5CLinkCapture%23setStatus' => 0,
'App%5CEntity%5CLinkCapture%23getImage' => 0,
'App%5CEntity%5CLinkCapture%23setImage' => 0,
'App%5CEntity%5CLinkCapture%24id' => 109,
'App%5CEntity%5CLinkCapture%24link' => 153,
'App%5CEntity%5CLinkCapture%24status' => 154,
'App%5CEntity%5CLinkCapture%24image' => 155,
'App%5CEntity%5CLog' => 156,
'App%5CEntity%5CLog%23getId' => 0,
'App%5CEntity%5CLog%23getUserId' => 0,
'App%5CEntity%5CLog%23setUserId' => 0,
'App%5CEntity%5CLog%23getEntityId' => 0,
'App%5CEntity%5CLog%23setEntityId' => 0,
'App%5CEntity%5CLog%23getEntityName' => 0,
'App%5CEntity%5CLog%23setEntityName' => 0,
'App%5CEntity%5CLog%23getActionName' => 0,
'App%5CEntity%5CLog%23setActionName' => 0,
'App%5CEntity%5CLog%23getCreatedAt' => 0,
'App%5CEntity%5CLog%23setCreatedAt' => 0,
'App%5CEntity%5CLog%23getActionBadge' => 0,
'App%5CEntity%5CLog%23getActionLabel' => 0,
'App%5CEntity%5CLog%24id' => 109,
'App%5CEntity%5CLog%24user_id' => 112,
'App%5CEntity%5CLog%24entity_id' => 112,
'App%5CEntity%5CLog%24entity_name' => 157,
'App%5CEntity%5CLog%24action_name' => 157,
'App%5CEntity%5CLog%24created_at' => 158,
'App%5CEntity%5CMailHistory' => 159,
'App%5CEntity%5CMailHistory%23getId' => 0,
'App%5CEntity%5CMailHistory%23getTemplate' => 0,
'App%5CEntity%5CMailHistory%23setTemplate' => 0,
'App%5CEntity%5CMailHistory%23getSender' => 0,
'App%5CEntity%5CMailHistory%23setSender' => 0,
'App%5CEntity%5CMailHistory%23getReplyTo' => 0,
'App%5CEntity%5CMailHistory%23setReplyTo' => 0,
'App%5CEntity%5CMailHistory%23getReceiver' => 0,
'App%5CEntity%5CMailHistory%23setReceiver' => 0,
'App%5CEntity%5CMailHistory%23getCc' => 0,
'App%5CEntity%5CMailHistory%23setCc' => 0,
'App%5CEntity%5CMailHistory%23getSubject' => 0,
'App%5CEntity%5CMailHistory%23setSubject' => 0,
'App%5CEntity%5CMailHistory%23getStatus' => 0,
'App%5CEntity%5CMailHistory%23setStatus' => 0,
'App%5CEntity%5CMailHistory%23getVariables' => 0,
'App%5CEntity%5CMailHistory%23setVariables' => 0,
'App%5CEntity%5CMailHistory%23getAttachments' => 0,
'App%5CEntity%5CMailHistory%23setAttachments' => 0,
'App%5CEntity%5CMailHistory%23getResendCount' => 0,
'App%5CEntity%5CMailHistory%23setResendCount' => 0,
'App%5CEntity%5CMailHistory%23getSentAt' => 0,
'App%5CEntity%5CMailHistory%23setSentAt' => 0,
'App%5CEntity%5CMailHistory%23getCreatedAt' => 0,
'App%5CEntity%5CMailHistory%23setCreatedAt' => 0,
'App%5CEntity%5CMailHistory%23getCreatedBy' => 0,
'App%5CEntity%5CMailHistory%23setCreatedBy' => 0,
'App%5CEntity%5CMailHistory%24id' => 109,
'App%5CEntity%5CMailHistory%24template' => 160,
'App%5CEntity%5CMailHistory%24sender' => 161,
'App%5CEntity%5CMailHistory%24reply_to' => 161,
'App%5CEntity%5CMailHistory%24receiver' => 161,
'App%5CEntity%5CMailHistory%24cc' => 161,
'App%5CEntity%5CMailHistory%24subject' => 161,
'App%5CEntity%5CMailHistory%24variables' => 161,
'App%5CEntity%5CMailHistory%24attachments' => 161,
'App%5CEntity%5CMailHistory%24status' => 162,
'App%5CEntity%5CMailHistory%24resend_count' => 114,
'App%5CEntity%5CMailHistory%24sent_at' => 163,
'App%5CEntity%5CMailHistory%24created_at' => 163,
'App%5CEntity%5CMailHistory%24created_by' => 141,
'App%5CEntity%5CMedia' => 164,
'App%5CEntity%5CMedia%23getId' => 0,
'App%5CEntity%5CMedia%23getName' => 0,
'App%5CEntity%5CMedia%23setName' => 0,
'App%5CEntity%5CMedia%23getLogo' => 0,
'App%5CEntity%5CMedia%23setLogo' => 0,
'App%5CEntity%5CMedia%23getCountryId' => 0,
'App%5CEntity%5CMedia%23setCountryId' => 0,
'App%5CEntity%5CMedia%23getLanguageId' => 0,
'App%5CEntity%5CMedia%23setLanguageId' => 0,
'App%5CEntity%5CMedia%23getCategory' => 0,
'App%5CEntity%5CMedia%23setCategory' => 0,
'App%5CEntity%5CMedia%23getWebsite' => 0,
'App%5CEntity%5CMedia%23setWebsite' => 0,
'App%5CEntity%5CMedia%23getVisitorsCount' => 0,
'App%5CEntity%5CMedia%23setVisitorsCount' => 0,
'App%5CEntity%5CMedia%23getContact' => 0,
'App%5CEntity%5CMedia%23setContact' => 0,
'App%5CEntity%5CMedia%23getEmail' => 0,
'App%5CEntity%5CMedia%23setEmail' => 0,
'App%5CEntity%5CMedia%23getTelephone' => 0,
'App%5CEntity%5CMedia%23setTelephone' => 0,
'App%5CEntity%5CMedia%23getFacebook' => 0,
'App%5CEntity%5CMedia%23setFacebook' => 0,
'App%5CEntity%5CMedia%23getFacebookFollowersCount' => 0,
'App%5CEntity%5CMedia%23setFacebookFollowersCount' => 0,
'App%5CEntity%5CMedia%23getTwitter' => 0,
'App%5CEntity%5CMedia%23setTwitter' => 0,
'App%5CEntity%5CMedia%23getTwitterFollowersCount' => 0,
'App%5CEntity%5CMedia%23setTwitterFollowersCount' => 0,
'App%5CEntity%5CMedia%23getInstagram' => 0,
'App%5CEntity%5CMedia%23setInstagram' => 0,
'App%5CEntity%5CMedia%23getInstagramFollowersCount' => 0,
'App%5CEntity%5CMedia%23setInstagramFollowersCount' => 0,
'App%5CEntity%5CMedia%23getYoutube' => 0,
'App%5CEntity%5CMedia%23setYoutube' => 0,
'App%5CEntity%5CMedia%23getYoutubeFollowersCount' => 0,
'App%5CEntity%5CMedia%23setYoutubeFollowersCount' => 0,
'App%5CEntity%5CMedia%23getCountry' => 0,
'App%5CEntity%5CMedia%23setCountry' => 0,
'App%5CEntity%5CMedia%23getLanguage' => 0,
'App%5CEntity%5CMedia%23setLanguage' => 0,
'App%5CEntity%5CMedia%23getFileName' => 0,
'App%5CEntity%5CMedia%23setFileName' => 0,
'App%5CEntity%5CMedia%23getImage' => 0,
'App%5CEntity%5CMedia%23getDomain' => 0,
'App%5CEntity%5CMedia%23setDomain' => 0,
'App%5CEntity%5CMedia%23__construct' => 0,
'App%5CEntity%5CMedia%23getInterests' => 0,
'App%5CEntity%5CMedia%23addInterest' => 0,
'App%5CEntity%5CMedia%23removeInterest' => 0,
'App%5CEntity%5CMedia%23getLanguages' => 0,
'App%5CEntity%5CMedia%23addLanguage' => 0,
'App%5CEntity%5CMedia%23removeLanguage' => 0,
'App%5CEntity%5CMedia%23getGeographicalSystems' => 0,
'App%5CEntity%5CMedia%23addGeographicalSystem' => 0,
'App%5CEntity%5CMedia%23removeGeographicalSystem' => 0,
'App%5CEntity%5CMedia%23getSocialNetworks' => 0,
'App%5CEntity%5CMedia%23getParent' => 0,
'App%5CEntity%5CMedia%23setParent' => 0,
'App%5CEntity%5CMedia%23__toString' => 0,
'App%5CEntity%5CMedia%23getStatus' => 0,
'App%5CEntity%5CMedia%23setStatus' => 0,
'App%5CEntity%5CMedia%24id' => 118,
'App%5CEntity%5CMedia%24parentId' => 165,
'App%5CEntity%5CMedia%24name' => 166,
'App%5CEntity%5CMedia%24logo' => 167,
'App%5CEntity%5CMedia%24countryId' => 168,
'App%5CEntity%5CMedia%24category' => 169,
'App%5CEntity%5CMedia%24website' => 170,
'App%5CEntity%5CMedia%24visitorsCount' => 171,
'App%5CEntity%5CMedia%24contact' => 172,
'App%5CEntity%5CMedia%24email' => 173,
'App%5CEntity%5CMedia%24languageId' => 174,
'App%5CEntity%5CMedia%24telephone' => 175,
'App%5CEntity%5CMedia%24facebook' => 176,
'App%5CEntity%5CMedia%24facebookFollowersCount' => 177,
'App%5CEntity%5CMedia%24twitter' => 178,
'App%5CEntity%5CMedia%24twitterFollowersCount' => 179,
'App%5CEntity%5CMedia%24instagram' => 180,
'App%5CEntity%5CMedia%24instagramFollowersCount' => 181,
'App%5CEntity%5CMedia%24youtube' => 182,
'App%5CEntity%5CMedia%24youtubeFollowersCount' => 183,
'App%5CEntity%5CMedia%24domain' => 184,
'App%5CEntity%5CMedia%24country' => 185,
'App%5CEntity%5CMedia%24language' => 150,
'App%5CEntity%5CMedia%24interests' => 186,
'App%5CEntity%5CMedia%24languages' => 187,
'App%5CEntity%5CMedia%24geographicalSystems' => 188,
'App%5CEntity%5CMedia%24socialNetworks' => 189,
'App%5CEntity%5CMedia%24parent' => 190,
'App%5CEntity%5CMedia%24status' => 151,
'App%5CEntity%5CMediaGeographicalSystem' => 191,
'App%5CEntity%5CMediaGeographicalSystem%23getId' => 0,
'App%5CEntity%5CMediaGeographicalSystem%23getMediaId' => 0,
'App%5CEntity%5CMediaGeographicalSystem%23setMediaId' => 0,
'App%5CEntity%5CMediaGeographicalSystem%23getGeographicalSystemId' => 0,
'App%5CEntity%5CMediaGeographicalSystem%23setGeographicalSystemId' => 0,
'App%5CEntity%5CMediaGeographicalSystem%23getMedia' => 0,
'App%5CEntity%5CMediaGeographicalSystem%23setMedia' => 0,
'App%5CEntity%5CMediaGeographicalSystem%23getGeographicalSystem' => 0,
'App%5CEntity%5CMediaGeographicalSystem%23setGeographicalSystem' => 0,
'App%5CEntity%5CMediaGeographicalSystem%24id' => 118,
'App%5CEntity%5CMediaGeographicalSystem%24mediaId' => 192,
'App%5CEntity%5CMediaGeographicalSystem%24geographicalSystemId' => 193,
'App%5CEntity%5CMediaGeographicalSystem%24media' => 194,
'App%5CEntity%5CMediaGeographicalSystem%24geographicalSystem' => 195,
'App%5CEntity%5CMediaInterest' => 196,
'App%5CEntity%5CMediaInterest%23getId' => 0,
'App%5CEntity%5CMediaInterest%23getMediaId' => 0,
'App%5CEntity%5CMediaInterest%23setMediaId' => 0,
'App%5CEntity%5CMediaInterest%23getInterestId' => 0,
'App%5CEntity%5CMediaInterest%23setInterestId' => 0,
'App%5CEntity%5CMediaInterest%23getMedia' => 0,
'App%5CEntity%5CMediaInterest%23setMedia' => 0,
'App%5CEntity%5CMediaInterest%23getInterest' => 0,
'App%5CEntity%5CMediaInterest%23setInterest' => 0,
'App%5CEntity%5CMediaInterest%24id' => 118,
'App%5CEntity%5CMediaInterest%24mediaId' => 192,
'App%5CEntity%5CMediaInterest%24interestId' => 197,
'App%5CEntity%5CMediaInterest%24media' => 198,
'App%5CEntity%5CMediaInterest%24interest' => 199,
'App%5CEntity%5CMediaLanguages' => 200,
'App%5CEntity%5CMediaLanguages%23getId' => 0,
'App%5CEntity%5CMediaLanguages%23getName' => 0,
'App%5CEntity%5CMediaLanguages%23setName' => 0,
'App%5CEntity%5CMediaLanguages%23getMediaId' => 0,
'App%5CEntity%5CMediaLanguages%23setMediaId' => 0,
'App%5CEntity%5CMediaLanguages%23getMedia' => 0,
'App%5CEntity%5CMediaLanguages%23setMedia' => 0,
'App%5CEntity%5CMediaLanguages%23__toString' => 0,
'App%5CEntity%5CMediaLanguages%24id' => 118,
'App%5CEntity%5CMediaLanguages%24name' => 138,
'App%5CEntity%5CMediaLanguages%24mediaId' => 192,
'App%5CEntity%5CMediaLanguages%24media' => 201,
'App%5CEntity%5CMediaSocialNetwork' => 202,
'App%5CEntity%5CMediaSocialNetwork%23getId' => 0,
'App%5CEntity%5CMediaSocialNetwork%23getName' => 0,
'App%5CEntity%5CMediaSocialNetwork%23setName' => 0,
'App%5CEntity%5CMediaSocialNetwork%23getLink' => 0,
'App%5CEntity%5CMediaSocialNetwork%23setLink' => 0,
'App%5CEntity%5CMediaSocialNetwork%23getFolowersCount' => 0,
'App%5CEntity%5CMediaSocialNetwork%23setFolowersCount' => 0,
'App%5CEntity%5CMediaSocialNetwork%23getMediaId' => 0,
'App%5CEntity%5CMediaSocialNetwork%23setMediaId' => 0,
'App%5CEntity%5CMediaSocialNetwork%23getMedia' => 0,
'App%5CEntity%5CMediaSocialNetwork%23setMedia' => 0,
'App%5CEntity%5CMediaSocialNetwork%24id' => 118,
'App%5CEntity%5CMediaSocialNetwork%24name' => 138,
'App%5CEntity%5CMediaSocialNetwork%24link' => 203,
'App%5CEntity%5CMediaSocialNetwork%24folowersCount' => 204,
'App%5CEntity%5CMediaSocialNetwork%24mediaId' => 192,
'App%5CEntity%5CMediaSocialNetwork%24media' => 205,
'App%5CEntity%5CSetting' => 206,
'App%5CEntity%5CSetting%23getId' => 0,
'App%5CEntity%5CSetting%23getName' => 0,
'App%5CEntity%5CSetting%23setName' => 0,
'App%5CEntity%5CSetting%23getDescription' => 0,
'App%5CEntity%5CSetting%23setDescription' => 0,
'App%5CEntity%5CSetting%23getValue' => 0,
'App%5CEntity%5CSetting%23setValue' => 0,
'App%5CEntity%5CSetting%23getFieldType' => 0,
'App%5CEntity%5CSetting%23setFieldType' => 0,
'App%5CEntity%5CSetting%23getTypeLabel' => 0,
'App%5CEntity%5CSetting%23getEditable' => 0,
'App%5CEntity%5CSetting%23setEditable' => 0,
'App%5CEntity%5CSetting%24id' => 109,
'App%5CEntity%5CSetting%24name' => 207,
'App%5CEntity%5CSetting%24description' => 142,
'App%5CEntity%5CSetting%24field_type' => 208,
'App%5CEntity%5CSetting%24value' => 161,
'App%5CEntity%5CSetting%24editable' => 209,
'App%5CEntity%5CUser' => 210,
'App%5CEntity%5CUser%23getId' => 0,
'App%5CEntity%5CUser%23getNom' => 0,
'App%5CEntity%5CUser%23setNom' => 0,
'App%5CEntity%5CUser%23getPrenom' => 0,
'App%5CEntity%5CUser%23setPrenom' => 0,
'App%5CEntity%5CUser%23getFullName' => 0,
'App%5CEntity%5CUser%23getShortName' => 0,
'App%5CEntity%5CUser%23getUsername' => 0,
'App%5CEntity%5CUser%23getUserIdentifier' => 0,
'App%5CEntity%5CUser%23getEmail' => 0,
'App%5CEntity%5CUser%23setEmail' => 0,
'App%5CEntity%5CUser%23getTelephone' => 0,
'App%5CEntity%5CUser%23setTelephone' => 0,
'App%5CEntity%5CUser%23getPassword' => 0,
'App%5CEntity%5CUser%23setPassword' => 0,
'App%5CEntity%5CUser%23getPasswordResetToken' => 0,
'App%5CEntity%5CUser%23setPasswordResetToken' => 0,
'App%5CEntity%5CUser%23getStatus' => 0,
'App%5CEntity%5CUser%23setStatus' => 0,
'App%5CEntity%5CUser%23getLocale' => 0,
'App%5CEntity%5CUser%23setLocale' => 0,
'App%5CEntity%5CUser%23getStatusLabel' => 0,
'App%5CEntity%5CUser%23getSalt' => 0,
'App%5CEntity%5CUser%23eraseCredentials' => 0,
'App%5CEntity%5CUser%23getRoles' => 0,
'App%5CEntity%5CUser%23setRoles' => 0,
'App%5CEntity%5CUser%23getRoleName' => 0,
'App%5CEntity%5CUser%23getRoleLabel' => 0,
'App%5CEntity%5CUser%23getRoleMeta' => 0,
'App%5CEntity%5CUser%23hasRole' => 0,
'App%5CEntity%5CUser%23hasRoles' => 0,
'App%5CEntity%5CUser%23__toString' => 0,
'App%5CEntity%5CUser%23getAdresse' => 0,
'App%5CEntity%5CUser%23setAdresse' => 0,
'App%5CEntity%5CUser%23getCompany' => 0,
'App%5CEntity%5CUser%23setCompany' => 0,
'App%5CEntity%5CUser%23__construct' => 0,
'App%5CEntity%5CUser%23getCompaigns' => 0,
'App%5CEntity%5CUser%23addCompaign' => 0,
'App%5CEntity%5CUser%23removeCompaign' => 0,
'App%5CEntity%5CUser%24id' => 109,
'App%5CEntity%5CUser%24nom' => 110,
'App%5CEntity%5CUser%24prenom' => 110,
'App%5CEntity%5CUser%24email' => 211,
'App%5CEntity%5CUser%24telephone' => 142,
'App%5CEntity%5CUser%24password' => 142,
'App%5CEntity%5CUser%24password_reset_token' => 142,
'App%5CEntity%5CUser%24roles' => 142,
'App%5CEntity%5CUser%24status' => 142,
'App%5CEntity%5CUser%24locale' => 142,
'App%5CEntity%5CUser%24adresse' => 161,
'App%5CEntity%5CUser%24company' => 161,
'App%5CEntity%5CUser%24compaigns' => 212,
'App%5CEntity%5CUser%24links' => 213,
'Cron%5CCronBundle%5CEntity%5CCronJob' => 214,
'Cron%5CCronBundle%5CEntity%5CCronJob%23__construct' => 0,
'Cron%5CCronBundle%5CEntity%5CCronJob%23getId' => 0,
'Cron%5CCronBundle%5CEntity%5CCronJob%23setName' => 0,
'Cron%5CCronBundle%5CEntity%5CCronJob%23getName' => 0,
'Cron%5CCronBundle%5CEntity%5CCronJob%23setCommand' => 0,
'Cron%5CCronBundle%5CEntity%5CCronJob%23getCommand' => 0,
'Cron%5CCronBundle%5CEntity%5CCronJob%23setSchedule' => 0,
'Cron%5CCronBundle%5CEntity%5CCronJob%23getSchedule' => 0,
'Cron%5CCronBundle%5CEntity%5CCronJob%23setDescription' => 0,
'Cron%5CCronBundle%5CEntity%5CCronJob%23getDescription' => 0,
'Cron%5CCronBundle%5CEntity%5CCronJob%23setEnabled' => 0,
'Cron%5CCronBundle%5CEntity%5CCronJob%23getEnabled' => 0,
'Cron%5CCronBundle%5CEntity%5CCronJob%23getReports' => 0,
'Cron%5CCronBundle%5CEntity%5CCronJob%23__toString' => 0,
'Cron%5CCronBundle%5CEntity%5CCronJob%24id' => 215,
'Cron%5CCronBundle%5CEntity%5CCronJob%24name' => 216,
'Cron%5CCronBundle%5CEntity%5CCronJob%24command' => 217,
'Cron%5CCronBundle%5CEntity%5CCronJob%24schedule' => 218,
'Cron%5CCronBundle%5CEntity%5CCronJob%24description' => 219,
'Cron%5CCronBundle%5CEntity%5CCronJob%24enabled' => 220,
'Cron%5CCronBundle%5CEntity%5CCronJob%24reports' => 221,
'Cron%5CCronBundle%5CEntity%5CCronJobRepository' => 0,
'Doctrine%5CORM%5CEntityRepository%23__construct' => 0,
'Doctrine%5CORM%5CEntityRepository%23createQueryBuilder' => 0,
'Doctrine%5CORM%5CEntityRepository%23createResultSetMappingBuilder' => 0,
'Doctrine%5CORM%5CEntityRepository%23createNamedQuery' => 0,
'Doctrine%5CORM%5CEntityRepository%23createNativeNamedQuery' => 0,
'Doctrine%5CORM%5CEntityRepository%23clear' => 0,
'Doctrine%5CORM%5CEntityRepository%23find' => 0,
'Doctrine%5CORM%5CEntityRepository%23findAll' => 0,
'Doctrine%5CORM%5CEntityRepository%23findBy' => 0,
'Doctrine%5CORM%5CEntityRepository%23findOneBy' => 0,
'Doctrine%5CORM%5CEntityRepository%23count' => 0,
'Doctrine%5CORM%5CEntityRepository%23__call' => 0,
'Doctrine%5CORM%5CEntityRepository%23getEntityName' => 0,
'Doctrine%5CORM%5CEntityRepository%23getClassName' => 0,
'Doctrine%5CORM%5CEntityRepository%23getEntityManager' => 0,
'Doctrine%5CORM%5CEntityRepository%23getClassMetadata' => 0,
'Doctrine%5CORM%5CEntityRepository%23matching' => 0,
'Doctrine%5CORM%5CEntityRepository%24_entityName' => 0,
'Doctrine%5CORM%5CEntityRepository%24_em' => 0,
'Doctrine%5CORM%5CEntityRepository%24_class' => 0,
'Cron%5CCronBundle%5CEntity%5CCronReport' => 222,
'Cron%5CCronBundle%5CEntity%5CCronReport%23getId' => 0,
'Cron%5CCronBundle%5CEntity%5CCronReport%23setJob' => 0,
'Cron%5CCronBundle%5CEntity%5CCronReport%23getJob' => 0,
'Cron%5CCronBundle%5CEntity%5CCronReport%23setOutput' => 0,
'Cron%5CCronBundle%5CEntity%5CCronReport%23getOutput' => 0,
'Cron%5CCronBundle%5CEntity%5CCronReport%23setError' => 0,
'Cron%5CCronBundle%5CEntity%5CCronReport%23getError' => 0,
'Cron%5CCronBundle%5CEntity%5CCronReport%23setExitCode' => 0,
'Cron%5CCronBundle%5CEntity%5CCronReport%23getExitCode' => 0,
'Cron%5CCronBundle%5CEntity%5CCronReport%23setRunAt' => 0,
'Cron%5CCronBundle%5CEntity%5CCronReport%23getRunAt' => 0,
'Cron%5CCronBundle%5CEntity%5CCronReport%23setRunTime' => 0,
'Cron%5CCronBundle%5CEntity%5CCronReport%23getRunTime' => 0,
'Cron%5CCronBundle%5CEntity%5CCronReport%24id' => 215,
'Cron%5CCronBundle%5CEntity%5CCronReport%24runAt' => 223,
'Cron%5CCronBundle%5CEntity%5CCronReport%24runTime' => 224,
'Cron%5CCronBundle%5CEntity%5CCronReport%24exitCode' => 225,
'Cron%5CCronBundle%5CEntity%5CCronReport%24output' => 226,
'Cron%5CCronBundle%5CEntity%5CCronReport%24error' => 226,
'Cron%5CCronBundle%5CEntity%5CCronReport%24job' => 227,
'Cron%5CCronBundle%5CEntity%5CCronReportRepository' => 0,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController' => 0,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23__construct' => 0,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainAction' => 0,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainSQLitePlatform' => 0,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainSQLServerPlatform' => 0,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainOtherPlatform' => 0,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%23explainOraclePlatform' => 0,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%24twig' => 0,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%24registry' => 0,
'Doctrine%5CBundle%5CDoctrineBundle%5CController%5CProfilerController%24profiler' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23__construct' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23addInsert' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getInserts' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getSelectSQL' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getCountSQL' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getInsertSQL' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getResultSetMapping' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getSelectConditionStatementSQL' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23exists' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getCacheRegion' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getEntityHydrator' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23storeEntityCache' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23storeJoinedAssociations' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getHash' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23expandParameters' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23expandCriteriaParameters' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getClassMetadata' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getManyToManyCollection' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getOneToManyCollection' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23getOwningTable' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23executeInserts' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23load' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadAll' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadById' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23count' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadCriteria' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadManyToManyCollection' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadOneToManyCollection' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23loadOneToOneEntity' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23lock' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23refresh' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%23buildCollectionCacheKey' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CCachedPersister%23afterTransactionComplete' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CCachedPersister%23afterTransactionRolledBack' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23update' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23delete' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24uow' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24metadataFactory' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24persister' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24class' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24queuedCache' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24region' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24timestampRegion' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24timestampKey' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24hydrator' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24cache' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24cacheLogger' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24regionName' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CAbstractEntityPersister%24joinedAssociations' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CCachedEntityPersister' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CCachedEntityPersister%23getEntityHydrator' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CCachedEntityPersister%23storeEntityCache' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CCachedPersister%23getCacheRegion' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getClassMetadata' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getResultSetMapping' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getInserts' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getInsertSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getSelectSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getCountSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23expandParameters' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23expandCriteriaParameters' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getSelectConditionStatementSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23addInsert' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23executeInserts' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23count' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getOwningTable' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23load' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadById' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadOneToOneEntity' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23refresh' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadCriteria' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadAll' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getManyToManyCollection' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadManyToManyCollection' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23loadOneToManyCollection' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23lock' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23getOneToManyCollection' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister%23exists' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23afterTransactionComplete' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23afterTransactionRolledBack' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23delete' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23update' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CNonStrictReadWriteCachedEntityPersister%23updateCache' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadOnlyCachedEntityPersister' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadOnlyCachedEntityPersister%23update' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23__construct' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23afterTransactionComplete' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23afterTransactionRolledBack' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23delete' => 0,
'Doctrine%5CORM%5CCache%5CPersister%5CEntity%5CReadWriteCachedEntityPersister%23update' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%23prepareInsertData' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%23getDiscriminatorColumnTableName' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%23getSelectColumnSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CAbstractEntityInheritancePersister%23getSelectJoinColumnSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23__construct' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getClassMetadata' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getResultSetMapping' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23addInsert' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getInserts' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23executeInserts' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23assignDefaultVersionAndUpsertableValues' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23fetchVersionAndNotUpsertableValues' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23extractIdentifierTypes' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23update' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23updateTable' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23deleteJoinTableRecords' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23delete' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23prepareUpdateData' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getOwningTable' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23load' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadById' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadOneToOneEntity' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23refresh' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23count' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadCriteria' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23expandCriteriaParameters' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadAll' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getManyToManyCollection' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadManyToManyCollection' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getCountSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getOrderBySQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectColumnsSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectColumnAssociationSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectManyToManyJoinSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getInsertSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getInsertColumnList' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSQLTableAlias' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23lock' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getLockTablesSql' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectConditionCriteriaSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectConditionStatementSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectConditionSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getOneToManyCollection' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadOneToManyCollection' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23expandParameters' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23exists' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getJoinSQLForJoinColumns' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSQLColumnAlias' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23generateFilterConditionSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23switchPersisterContext' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getClassIdentifiersTypes' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24class' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24conn' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24platform' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24em' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24queuedInserts' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24columnTypes' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24quotedColumns' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24quoteStrategy' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24identifierFlattener' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24currentPersisterContext' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23prepareInsertData' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadArrayFromResult' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23loadCollectionFromStatement' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getManyToManyStatement' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectColumnSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getSelectConditionStatementColumnSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getOneToManyStatement' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23expandToManyParameters' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getTypes' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getValues' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%23getIndividualValue' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24comparisonMap' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24insertSql' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24limitsHandlingContext' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CBasicEntityPersister%24noLimitsContext' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%23__construct' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24class' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24rsm' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24selectColumnListSql' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24selectJoinSql' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24sqlAliasCounter' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24sqlTableAliases' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CCachedPersisterContext%24handlesLimits' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CEntityPersister' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getDiscriminatorColumnTableName' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getVersionedClassMetadata' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getOwningTable' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23executeInserts' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23update' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23delete' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getSelectSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getCountSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getLockTablesSql' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getSelectColumnsSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getInsertColumnList' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23assignDefaultVersionAndUpsertableValues' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23fetchVersionAndNotUpsertableValues' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getJoinSql' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%23getSQLResultCasing' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%24owningTableMap' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CJoinedSubclassPersister%24quotedTableMap' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getDiscriminatorColumnTableName' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSelectColumnsSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getInsertColumnList' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSQLTableAlias' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSelectConditionSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSelectConditionCriteriaSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSelectConditionDiscriminatorValueSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23generateFilterConditionSQL' => 0,
'Doctrine%5CORM%5CPersisters%5CEntity%5CSingleTablePersister%23getSQLResultCasing' => 0,
'Endroid%5CQrCodeBundle%5CController%5CGenerateController' => 0,
'Endroid%5CQrCodeBundle%5CController%5CGenerateController%23__construct' => 0,
'Endroid%5CQrCodeBundle%5CController%5CGenerateController%23__invoke' => 0,
'Endroid%5CQrCodeBundle%5CController%5CGenerateController%24builderRegistry' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CConnectController' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CConnectController%23__construct' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CConnectController%23registrationAction' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CConnectController%23connectServiceAction' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CConnectController%23getResourceOwnerByName' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CConnectController%23authenticateUser' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CConnectController%23getTargetPath' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CConnectController%23getConfirmationResponse' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CConnectController%23dispatch' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CConnectController%23getSession' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CConnectController%24oauthUtils' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CConnectController%24resourceOwnerMapLocator' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CConnectController%24requestStack' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CConnectController%24enableConnect' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CConnectController%24grantRule' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CConnectController%24failedUseReferer' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CConnectController%24failedAuthPath' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CConnectController%24enableConnectConfirmation' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CConnectController%24firewallNames' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CLoginController' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CLoginController%23__construct' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CLoginController%23connectAction' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CLoginController%23getSession' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CLoginController%24connect' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CLoginController%24grantRule' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CLoginController%24authenticationUtils' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CLoginController%24router' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CLoginController%24authorizationChecker' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CLoginController%24requestStack' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CLoginController%24twig' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CRedirectToServiceController' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CRedirectToServiceController%23__construct' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CRedirectToServiceController%23redirectToServiceAction' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CRedirectToServiceController%23storeReturnPath' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CRedirectToServiceController%24oauthUtils' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CRedirectToServiceController%24domainWhitelist' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CRedirectToServiceController%24firewallNames' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CRedirectToServiceController%24targetPathParameter' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CRedirectToServiceController%24failedUseReferer' => 0,
'HWI%5CBundle%5COAuthBundle%5CController%5CRedirectToServiceController%24useReferer' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%23__construct' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%23redirectAction' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%23urlRedirectAction' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%23__invoke' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%24router' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%24httpPort' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CRedirectController%24httpsPort' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%23__construct' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%23templateAction' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%23__invoke' => 0,
'Symfony%5CBundle%5CFrameworkBundle%5CController%5CTemplateController%24twig' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionPanelController' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionPanelController%23__construct' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionPanelController%23body' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionPanelController%23stylesheet' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionPanelController%24errorRenderer' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CExceptionPanelController%24profiler' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23__construct' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23homeAction' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23panelAction' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23toolbarAction' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23searchBarAction' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23searchResultsAction' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23searchAction' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23phpinfoAction' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23openAction' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23getTemplateManager' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23denyAccessIfProfilerDisabled' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%23renderWithCspNonces' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24templateManager' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24generator' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24profiler' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24twig' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24templates' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24cspHandler' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CProfilerController%24baseDir' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%23__construct' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%23panelAction' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%23getTraces' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%24profiler' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%24twig' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%24matcher' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%24routes' => 0,
'Symfony%5CBundle%5CWebProfilerBundle%5CController%5CRouterController%24expressionLanguageProviders' => 0,
'Symfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver' => 0,
'Symfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%23__construct' => 0,
'Symfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%23supports' => 0,
'Symfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%23resolve' => 0,
'Symfony%5CComponent%5CSecurity%5CHttp%5CController%5CUserValueResolver%24tokenStorage' => 0,

], [

0 => [],
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/categories',
                ],
                'name' => [
                    'categories',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/categories/table',
                ],
                'name' => [
                    'categories.table',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/categories/{id}/details',
                ],
                'name' => [
                    'categories.details',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/categories/create',
                ],
                'name' => [
                    'categories.create',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/categories/{id}/update',
                ],
                'name' => [
                    'categories.update',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
6 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/categories/{id}/store',
                ],
                'name' => [
                    'categories.store',
                ],
                'defaults' => [
                    [
                        'id' => 0,
                    ],
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
7 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/categories/{id}/delete',
                ],
                'name' => [
                    'categories.delete',
                ],
                'defaults' => [
                    [
                        'id' => 0,
                    ],
                ],
                'methods' => [
                    [
                        'GET',
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
8 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/compaigns',
                ],
                'name' => [
                    'compaigns',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
9 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/compaigns/table',
                ],
                'name' => [
                    'compaigns.table',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
10 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/compaigns/export',
                ],
                'name' => [
                    'compaigns.export',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
11 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/compaigns/{id}/details',
                ],
                'name' => [
                    'compaigns.details',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
12 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/compaigns/create',
                ],
                'name' => [
                    'compaigns.create',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
13 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/compaigns/{id}/update',
                ],
                'name' => [
                    'compaigns.update',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
14 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/compaigns/{id}/store',
                ],
                'name' => [
                    'compaigns.store',
                ],
                'defaults' => [
                    [
                        'id' => 0,
                    ],
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
15 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/compaigns/{id}/delete',
                ],
                'name' => [
                    'compaigns.delete',
                ],
                'defaults' => [
                    [
                        'id' => 0,
                    ],
                ],
                'methods' => [
                    [
                        'GET',
                        'POST',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
16 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/countries',
                ],
                'name' => [
                    'countries',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
17 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/countries/table',
                ],
                'name' => [
                    'countries.table',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
18 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/countries/{id}/details',
                ],
                'name' => [
                    'countries.details',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
19 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/countries/create',
                ],
                'name' => [
                    'countries.create',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
20 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/countries/{id}/update',
                ],
                'name' => [
                    'countries.update',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
21 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/countries/{id}/store',
                ],
                'name' => [
                    'countries.store',
                ],
                'defaults' => [
                    [
                        'id' => 0,
                    ],
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
22 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/countries/{id}/delete',
                ],
                'name' => [
                    'countries.delete',
                ],
                'defaults' => [
                    [
                        'id' => 0,
                    ],
                ],
                'methods' => [
                    [
                        'GET',
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
23 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/cronjobs',
                ],
                'name' => [
                    'cronjobs',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
24 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/cronjobs/{id}/change-status',
                ],
                'name' => [
                    'cronjobs.change_status',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
25 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/cronjobs/table',
                ],
                'name' => [
                    'cronjobs.table',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
26 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/file/upload',
                ],
                'name' => [
                    'file.upload',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
27 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/geographical_systems',
                ],
                'name' => [
                    'geographical_systems',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
28 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/geographical_systems/table',
                ],
                'name' => [
                    'geographical_systems.table',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
29 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/geographical_systems/create',
                ],
                'name' => [
                    'geographical_systems.create',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
30 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/geographical_systems/{id}/update',
                ],
                'name' => [
                    'geographical_systems.update',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
31 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/geographical_systems/{id}/store',
                ],
                'name' => [
                    'geographical_systems.store',
                ],
                'defaults' => [
                    [
                        'id' => 0,
                    ],
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
32 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/geographical_systems/{id}/delete',
                ],
                'name' => [
                    'geographical_systems.delete',
                ],
                'defaults' => [
                    [
                        'id' => 0,
                    ],
                ],
                'methods' => [
                    [
                        'GET',
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
33 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/image/upload',
                ],
                'name' => [
                    'image.upload',
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
34 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/interest',
                ],
                'name' => [
                    'interests',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
35 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/interest/table',
                ],
                'name' => [
                    'interests.table',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
36 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/interest/{id}/details',
                ],
                'name' => [
                    'interests.details',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
37 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/interest/create',
                ],
                'name' => [
                    'interests.create',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
38 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/interest/{id}/update',
                ],
                'name' => [
                    'interests.update',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
39 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/interest/{id}/store',
                ],
                'name' => [
                    'interests.store',
                ],
                'defaults' => [
                    [
                        'id' => 0,
                    ],
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
40 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/interest/{id}/delete',
                ],
                'name' => [
                    'interests.delete',
                ],
                'defaults' => [
                    [
                        'id' => 0,
                    ],
                ],
                'methods' => [
                    [
                        'GET',
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
41 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/languages',
                ],
                'name' => [
                    'languages',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
42 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/languages/table',
                ],
                'name' => [
                    'languages.table',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
43 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/languages/{id}/details',
                ],
                'name' => [
                    'languages.details',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
44 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/languages/create',
                ],
                'name' => [
                    'languages.create',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
45 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/languages/{id}/update',
                ],
                'name' => [
                    'languages.update',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
46 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/languages/{id}/store',
                ],
                'name' => [
                    'languages.store',
                ],
                'defaults' => [
                    [
                        'id' => 0,
                    ],
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
47 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/languages/{id}/delete',
                ],
                'name' => [
                    'languages.delete',
                ],
                'defaults' => [
                    [
                        'id' => 0,
                    ],
                ],
                'methods' => [
                    [
                        'GET',
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
48 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/link/add',
                ],
                'name' => [
                    'link_capture_add',
                ],
                'methods' => [
                    [
                        'GET',
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
49 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/link/capture',
                ],
                'name' => [
                    'link_capture',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
50 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/link/doCapture',
                ],
                'name' => [
                    'link_DoCapture',
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
51 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/links',
                ],
                'name' => [
                    'link',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
52 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/links/check',
                ],
                'name' => [
                    'check',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
53 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/links/table',
                ],
                'name' => [
                    'link.table',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
54 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/links/export',
                ],
                'name' => [
                    'link.export',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
55 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/links/{id}/details',
                ],
                'name' => [
                    'link.details',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
56 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/links/{id}/screen',
                ],
                'name' => [
                    'link.screen',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
57 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/links/create',
                ],
                'name' => [
                    'link.create',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
58 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/links/{id}/update',
                ],
                'name' => [
                    'link.update',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
59 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/links/{id}/store',
                ],
                'name' => [
                    'link.store',
                ],
                'defaults' => [
                    [
                        'id' => 0,
                    ],
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
60 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/links/{id}/delete',
                ],
                'name' => [
                    'link.delete',
                ],
                'defaults' => [
                    [
                        'id' => 0,
                    ],
                ],
                'methods' => [
                    [
                        'GET',
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
61 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/logs/{entity_name}/{entity_id}',
                ],
                'name' => [
                    'logs',
                ],
                'defaults' => [
                    [
                        'entity_name' => null,
                        'entity_id' => null,
                    ],
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
62 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/logs/{entity_name}/{entity_id}/table',
                ],
                'name' => [
                    'logs.table',
                ],
                'defaults' => [
                    [
                        'entity_name' => null,
                        'entity_id' => null,
                    ],
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
63 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/mail/history',
                ],
                'name' => [
                    'mail.history',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
64 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/mail/history/{id}/resend',
                ],
                'name' => [
                    'mail.history.resend',
                ],
                'methods' => [
                    [
                        'GET',
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
65 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/mail/history/{id}/show',
                ],
                'name' => [
                    'mail.history.show',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
66 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/mail/history/table',
                ],
                'name' => [
                    'mail.history.table',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
67 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/media',
                ],
                'name' => [
                    'media',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
68 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/media/table',
                ],
                'name' => [
                    'media.table',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
69 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/media/export',
                ],
                'name' => [
                    'media.export',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
70 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/media/{id}/details',
                ],
                'name' => [
                    'media.details',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
71 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/media/create',
                ],
                'name' => [
                    'media.create',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
72 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/media/{id}/update',
                ],
                'name' => [
                    'media.update',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
73 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/media/{id}/store',
                ],
                'name' => [
                    'media.store',
                ],
                'defaults' => [
                    [
                        'id' => 0,
                    ],
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
74 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/media/{id}/delete',
                ],
                'name' => [
                    'media.delete',
                ],
                'defaults' => [
                    [
                        'id' => 0,
                    ],
                ],
                'methods' => [
                    [
                        'GET',
                        'POST',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
75 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/media/search',
                ],
                'name' => [
                    'media.search',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
76 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/media/stats',
                ],
                'name' => [
                    'media.stats',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
77 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/reporting',
                ],
                'name' => [
                    'reporting',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
78 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/reporting/media-countries',
                ],
                'name' => [
                    'reporting.media-countries',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
79 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/reporting/medias-per-country',
                ],
                'name' => [
                    'reporting.medias_per_country',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
80 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/reporting/medias-per-category',
                ],
                'name' => [
                    'reporting.medias_per_category',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
81 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/reporting/links-per-media',
                ],
                'name' => [
                    'reporting.links_per_media',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
82 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/reporting/medias-per-language',
                ],
                'name' => [
                    'reporting.medias_per_language',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
83 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/reporting/map',
                ],
                'name' => [
                    'reporting.map',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
84 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/settings',
                ],
                'name' => [
                    'settings',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
85 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/settings/table',
                ],
                'name' => [
                    'settings.table',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
86 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/settings/create',
                ],
                'name' => [
                    'setting.create',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
87 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/settings/{id}/update',
                ],
                'name' => [
                    'setting.update',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
88 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/settings/{id}/store',
                ],
                'name' => [
                    'setting.store',
                ],
                'defaults' => [
                    [
                        'id' => 0,
                    ],
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
89 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/users',
                ],
                'name' => [
                    'users',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
90 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/users/table',
                ],
                'name' => [
                    'users.table',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
91 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/user/{id}/details',
                ],
                'name' => [
                    'user.details',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
92 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/user/create',
                ],
                'name' => [
                    'user.create',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
93 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/user/{id}/update',
                ],
                'name' => [
                    'user.update',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
94 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/user/{id}/store',
                ],
                'name' => [
                    'user.store',
                ],
                'defaults' => [
                    [
                        'id' => 0,
                    ],
                ],
                'methods' => [
                    [
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
95 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
            clone ($p['Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/admin/user/{id}/delete',
                ],
                'name' => [
                    'user.delete',
                ],
                'defaults' => [
                    [
                        'id' => 0,
                    ],
                ],
                'methods' => [
                    [
                        'GET',
                        'POST',
                    ],
                ],
            ],
            'Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\IsGranted' => [
                'attributes' => [
                    1 => 'ROLE_ADMIN',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
96 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/',
                ],
                'name' => [
                    'home',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
97 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/services',
                ],
                'name' => [
                    'services',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
98 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/pricing',
                ],
                'name' => [
                    'pricing',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
99 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/customers',
                ],
                'name' => [
                    'customers',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
100 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/ressources',
                ],
                'name' => [
                    'ressources',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
101 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/contact',
                ],
                'name' => [
                    'contact',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
102 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/password/reset',
                ],
                'name' => [
                    'password.reset',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
103 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/password/new/{token}',
                ],
                'name' => [
                    'password.new',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
104 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/login',
                ],
                'name' => [
                    'login',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
105 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/logout',
                ],
                'name' => [
                    'logout',
                ],
                'methods' => [
                    [
                        'GET',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
106 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/oauth/connect/azure',
                ],
                'name' => [
                    'connect_azure_start',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
107 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Routing\\Annotation\\Route'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Routing\\Annotation\\Route')),
        ],
        null,
        [
            'Symfony\\Component\\Routing\\Annotation\\Route' => [
                'path' => [
                    '/oauth/check-azure',
                ],
                'name' => [
                    'connect_azure_check',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
108 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'repositoryClass' => [
                    'App\\Repository\\CategoryRepository',
                ],
                'message' => [
                    1 => 'Category already exists',
                ],
                'fields' => [
                    1 => [
                        'name',
                    ],
                ],
                'errorPath' => [
                    1 => 'name',
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
109 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
            clone ($p['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    2 => 'integer',
                ],
                'precision' => [
                    2 => null,
                ],
                'scale' => [
                    2 => null,
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
110 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
111 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'repositoryClass' => [
                    'App\\Repository\\CompaignRepository',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
112 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
113 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'date',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
114 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'default' => 0,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
115 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\User',
                ],
                'nullable' => [
                    1 => false,
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
116 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
            clone ($p['Doctrine\\ORM\\Mapping\\OrderBy'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OrderBy')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'compaign',
                ],
                'targetEntity' => [
                    'App\\Entity\\Link',
                ],
                'value' => [
                    1 => [
                        'title' => 'ASC',
                        'id' => 'ASC',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
117 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'countries',
                ],
                'repositoryClass' => [
                    1 => 'App\\Repository\\CountryRepository',
                ],
                'message' => [
                    2 => 'Country already exists',
                ],
                'fields' => [
                    2 => [
                        'countryname',
                    ],
                ],
                'errorPath' => [
                    2 => 'name',
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
118 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'id',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'strategy' => [
                    2 => 'IDENTITY',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
119 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'countryCode',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    2,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'fixed' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
120 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'countryName',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    100,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
121 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'currencyCode',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    3,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'fixed' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
122 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'fipsCode',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    2,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'fixed' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
123 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'isoNumeric',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    4,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'fixed' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
124 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'north',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    30,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
125 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'south',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    30,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
126 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'east',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    30,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
127 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'west',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    30,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
128 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'capital',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    100,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
129 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'continentName',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    100,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
130 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'continent',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    2,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'fixed' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
131 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'languages',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    100,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
132 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'isoAlpha3',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    3,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'fixed' => true,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
133 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'geonameId',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
134 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'telephonePrefix',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    10,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
135 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'geographical_system',
                ],
                'message' => [
                    2 => 'Geographical System already exists',
                ],
                'fields' => [
                    2 => [
                        'name',
                    ],
                ],
                'errorPath' => [
                    2 => 'name',
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
136 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'name',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
137 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'interest',
                ],
                'message' => [
                    2 => 'Interest already exists',
                ],
                'fields' => [
                    2 => [
                        'name',
                    ],
                ],
                'errorPath' => [
                    2 => 'name',
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
138 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'name',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    100,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
139 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'repositoryClass' => [
                    'App\\Repository\\LanguageRepository',
                ],
                'message' => [
                    1 => 'Language already exists',
                ],
                'fields' => [
                    1 => [
                        'name',
                    ],
                ],
                'errorPath' => [
                    1 => 'name',
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
140 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'link',
                ],
                'repositoryClass' => [
                    1 => 'App\\Repository\\LinkRepository',
                ],
                'message' => [
                    2 => 'Link already exists',
                ],
                'fields' => [
                    2 => [
                        'link',
                    ],
                ],
                'errorPath' => [
                    2 => 'name',
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
141 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
142 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    255,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
143 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    50,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
144 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    100,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
145 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    5,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
146 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'date',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
147 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Media',
                ],
                'inversedBy' => [
                    'links',
                ],
                'nullable' => [
                    1 => false,
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
148 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Category',
                ],
                'nullable' => [
                    1 => false,
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
149 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Compaign',
                ],
                'nullable' => [
                    1 => false,
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
150 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Language',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
151 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    20,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'default' => 'pending',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
152 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'repositoryClass' => [
                    'App\\Repository\\LinkCaptureRepository',
                ],
                'fields' => [
                    1 => 'link',
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
153 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    512,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'unique' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
154 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'options' => [
                    [
                        'default' => false,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
155 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    150,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
156 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'repositoryClass' => [
                    'App\\Repository\\LogRepository',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
157 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    32,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
158 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'datetime',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
159 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'repositoryClass' => [
                    'App\\Repository\\MailHistoryRepository',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
160 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
161 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'text',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
162 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    16,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'default' => 'pending',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
163 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'datetime',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
164 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
            clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'media',
                ],
                'repositoryClass' => [
                    1 => 'App\\Repository\\MediaRepository',
                ],
                'message' => [
                    2 => 'Media already exists',
                ],
                'fields' => [
                    2 => [
                        'name',
                    ],
                ],
                'errorPath' => [
                    2 => 'name',
                ],
                'groups' => [
                    2 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
165 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'parent_id',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
166 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'name',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    150,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
167 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'logo',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    150,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
168 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'country_id',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
169 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'category',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    150,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
170 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'website',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    150,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
171 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'visitors_count',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
172 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'contact',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    150,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
173 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'email',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    150,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
174 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'language_id',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
175 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'telephone',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    12,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
176 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'facebook',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    100,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
177 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'facebook_followers_count',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
178 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'twitter',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    100,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
179 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'twitter_followers_count',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
180 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'instagram',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    100,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
181 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'instagram_followers_count',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
182 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'youtube',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    100,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
183 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'youtube_followers_count',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
184 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'domain',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    100,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
185 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Country',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
186 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'media',
                ],
                'targetEntity' => [
                    'App\\Entity\\MediaInterest',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
187 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'media',
                ],
                'targetEntity' => [
                    'App\\Entity\\MediaLanguages',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
188 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'media',
                ],
                'targetEntity' => [
                    'App\\Entity\\MediaGeographicalSystem',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
189 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'media',
                ],
                'targetEntity' => [
                    'App\\Entity\\MediaSocialNetwork',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
190 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Media',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
191 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'media_geographical_system',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
192 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'media_id',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
193 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'geographical_system_id',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
194 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Media',
                ],
                'inversedBy' => [
                    'geographicalSystems',
                ],
                'nullable' => [
                    1 => false,
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
195 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\GeographicalSystem',
                ],
                'nullable' => [
                    1 => false,
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
196 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'media_interest',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
197 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'interest_id',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
198 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Media',
                ],
                'inversedBy' => [
                    'interests',
                ],
                'nullable' => [
                    1 => false,
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
199 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Interest',
                ],
                'nullable' => [
                    1 => false,
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
200 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'media_languages',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
201 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Media',
                ],
                'inversedBy' => [
                    'languages',
                ],
                'nullable' => [
                    1 => false,
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
202 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'media_social_network',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
203 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'link',
                ],
                'type' => [
                    'string',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
204 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'folowers_count',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
205 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'App\\Entity\\Media',
                ],
                'inversedBy' => [
                    'socialNetworks',
                ],
                'nullable' => [
                    1 => false,
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
206 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'repositoryClass' => [
                    'App\\Repository\\SettingRepository',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
207 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Regex'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Regex')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    64,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'unique' => [
                    true,
                ],
                'message' => [
                    1 => 'Caractères autorisés: a-z - _ .',
                ],
                'pattern' => [
                    1 => '/^[a-z\\-_.]+$/i',
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
208 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    16,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'default' => 'text',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
209 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'options' => [
                    [
                        'default' => 1,
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
210 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'repositoryClass' => [
                    'App\\Repository\\UserRepository',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
211 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Email'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Email')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'string',
                ],
                'length' => [
                    180,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
                'nullable' => [
                    true,
                ],
                'message' => [
                    1 => 'Email invalide.',
                ],
                'groups' => [
                    1 => [
                        'Default',
                    ],
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
212 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'user',
                ],
                'targetEntity' => [
                    'App\\Entity\\Compaign',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
213 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'user',
                ],
                'targetEntity' => [
                    'App\\Entity\\Link',
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
214 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'cron_job',
                    'un_name',
                ],
                'uniqueConstraints' => [
                    [
                        $o[1],
                    ],
                ],
                'columns' => [
                    1 => [
                        'name',
                    ],
                ],
                'repositoryClass' => [
                    2 => 'Cron\\CronBundle\\Entity\\CronJobRepository',
                ],
            ],
        ],
        [
            $o[0],
            $o[2],
        ],
        []
    );
},
215 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
            clone ($p['Doctrine\\ORM\\Mapping\\Id'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Id')),
            clone ($p['Doctrine\\ORM\\Mapping\\GeneratedValue'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\GeneratedValue')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'id',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
            $o[2],
        ],
        []
    );
},
216 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'name',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    191,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
217 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'command',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    1024,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
218 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'schedule',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    191,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
219 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'description',
                ],
                'type' => [
                    'string',
                ],
                'length' => [
                    191,
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
220 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'enabled',
                ],
                'type' => [
                    'boolean',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
221 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\OneToMany'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToMany')),
        ],
        null,
        [
            'stdClass' => [
                'mappedBy' => [
                    'job',
                ],
                'targetEntity' => [
                    'CronReport',
                ],
                'cascade' => [
                    [
                        'remove',
                    ],
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
222 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
            clone ($p['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'cron_report',
                ],
                'repositoryClass' => [
                    1 => 'Cron\\CronBundle\\Entity\\CronReportRepository',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},
223 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'run_at',
                ],
                'type' => [
                    'datetime',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
224 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'run_time',
                ],
                'type' => [
                    'float',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
225 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'exit_code',
                ],
                'type' => [
                    'integer',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
226 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Doctrine\\ORM\\Mapping\\Column'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Column')),
        ],
        null,
        [
            'stdClass' => [
                'type' => [
                    'text',
                ],
                'precision' => [
                    null,
                ],
                'scale' => [
                    null,
                ],
            ],
        ],
        [
            $o[0],
        ],
        []
    );
},
227 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ManyToOne'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOne')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumn'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumn')),
        ],
        null,
        [
            'stdClass' => [
                'targetEntity' => [
                    'CronJob',
                ],
                'inversedBy' => [
                    'reports',
                ],
                'onDelete' => [
                    1 => 'CASCADE',
                ],
            ],
        ],
        [
            $o[0],
            $o[1],
        ],
        []
    );
},

]];
