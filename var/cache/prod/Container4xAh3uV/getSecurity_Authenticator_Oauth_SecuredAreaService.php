<?php

namespace Container4xAh3uV;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSecurity_Authenticator_Oauth_SecuredAreaService extends App_KernelProdContainer
{
    /*
     * Gets the private 'security.authenticator.oauth.secured_area' shared service.
     *
     * @return \HWI\Bundle\OAuthBundle\Security\Http\Authenticator\OAuthAuthenticator
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->privates['security.http_utils'] ?? $container->load('getSecurity_HttpUtilsService'));
        $b = new \Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler($a, []);
        $b->setOptions(['login_path' => '/oauth/login', 'always_use_default_target_path' => false, 'default_target_path' => '/', 'target_path_parameter' => '_target_path', 'use_referer' => false]);
        $b->setFirewallName('secured_area');
        $c = new \Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler(($container->services['http_kernel'] ?? $container->getHttpKernelService()), $a, [], ($container->privates['monolog.logger.security'] ?? $container->getMonolog_Logger_SecurityService()));
        $c->setOptions(['login_path' => '/oauth/login', 'failure_path' => '/oauth/login', 'failure_forward' => false, 'failure_path_parameter' => '_failure_path']);

        return $container->privates['security.authenticator.oauth.secured_area'] = new \HWI\Bundle\OAuthBundle\Security\Http\Authenticator\OAuthAuthenticator($a, new \HWI\Bundle\OAuthBundle\Security\Core\User\OAuthUserProvider(), ($container->services['hwi_oauth.resource_ownermap.secured_area'] ?? $container->load('getHwiOauth_ResourceOwnermap_SecuredAreaService')), $container->parameters['hwi_oauth.resource_ownermap.configured.secured_area'], $b, $c);
    }
}
