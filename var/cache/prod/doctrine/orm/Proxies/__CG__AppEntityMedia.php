<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Media extends \App\Entity\Media implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'parentId', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'name', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'logo', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'countryId', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'category', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'website', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'visitorsCount', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'contact', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'email', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'languageId', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'telephone', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'facebook', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'facebookFollowersCount', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'twitter', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'twitterFollowersCount', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'instagram', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'instagramFollowersCount', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'youtube', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'youtubeFollowersCount', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'domain', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'status', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'country', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'language', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'interests', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'languages', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'geographicalSystems', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'socialNetworks', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'parent'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'parentId', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'name', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'logo', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'countryId', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'category', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'website', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'visitorsCount', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'contact', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'email', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'languageId', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'telephone', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'facebook', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'facebookFollowersCount', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'twitter', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'twitterFollowersCount', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'instagram', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'instagramFollowersCount', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'youtube', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'youtubeFollowersCount', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'domain', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'status', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'country', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'language', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'interests', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'languages', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'geographicalSystems', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'socialNetworks', '' . "\0" . 'App\\Entity\\Media' . "\0" . 'parent'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Media $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName(string $name): \App\Entity\Media
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getLogo(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogo', []);

        return parent::getLogo();
    }

    /**
     * {@inheritDoc}
     */
    public function setLogo(?string $logo): \App\Entity\Media
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLogo', [$logo]);

        return parent::setLogo($logo);
    }

    /**
     * {@inheritDoc}
     */
    public function getCountryId(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountryId', []);

        return parent::getCountryId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCountryId(int $countryId): \App\Entity\Media
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountryId', [$countryId]);

        return parent::setCountryId($countryId);
    }

    /**
     * {@inheritDoc}
     */
    public function getLanguageId(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLanguageId', []);

        return parent::getLanguageId();
    }

    /**
     * {@inheritDoc}
     */
    public function setLanguageId(int $languageId): \App\Entity\Media
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLanguageId', [$languageId]);

        return parent::setLanguageId($languageId);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', []);

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategory(string $category): \App\Entity\Media
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', [$category]);

        return parent::setCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getWebsite(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWebsite', []);

        return parent::getWebsite();
    }

    /**
     * {@inheritDoc}
     */
    public function setWebsite(string $website): \App\Entity\Media
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWebsite', [$website]);

        return parent::setWebsite($website);
    }

    /**
     * {@inheritDoc}
     */
    public function getVisitorsCount(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVisitorsCount', []);

        return parent::getVisitorsCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setVisitorsCount(int $visitorsCount): \App\Entity\Media
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVisitorsCount', [$visitorsCount]);

        return parent::setVisitorsCount($visitorsCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getContact(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContact', []);

        return parent::getContact();
    }

    /**
     * {@inheritDoc}
     */
    public function setContact(?string $contact): \App\Entity\Media
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContact', [$contact]);

        return parent::setContact($contact);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail(string $email): \App\Entity\Media
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getTelephone(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTelephone', []);

        return parent::getTelephone();
    }

    /**
     * {@inheritDoc}
     */
    public function setTelephone(?string $telephone): \App\Entity\Media
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTelephone', [$telephone]);

        return parent::setTelephone($telephone);
    }

    /**
     * {@inheritDoc}
     */
    public function getFacebook(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFacebook', []);

        return parent::getFacebook();
    }

    /**
     * {@inheritDoc}
     */
    public function setFacebook(?string $facebook): \App\Entity\Media
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFacebook', [$facebook]);

        return parent::setFacebook($facebook);
    }

    /**
     * {@inheritDoc}
     */
    public function getFacebookFollowersCount(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFacebookFollowersCount', []);

        return parent::getFacebookFollowersCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setFacebookFollowersCount(int $facebookFollowersCount): \App\Entity\Media
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFacebookFollowersCount', [$facebookFollowersCount]);

        return parent::setFacebookFollowersCount($facebookFollowersCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getTwitter(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTwitter', []);

        return parent::getTwitter();
    }

    /**
     * {@inheritDoc}
     */
    public function setTwitter(?string $twitter): \App\Entity\Media
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTwitter', [$twitter]);

        return parent::setTwitter($twitter);
    }

    /**
     * {@inheritDoc}
     */
    public function getTwitterFollowersCount(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTwitterFollowersCount', []);

        return parent::getTwitterFollowersCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setTwitterFollowersCount(int $twitterFollowersCount): \App\Entity\Media
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTwitterFollowersCount', [$twitterFollowersCount]);

        return parent::setTwitterFollowersCount($twitterFollowersCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getInstagram(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInstagram', []);

        return parent::getInstagram();
    }

    /**
     * {@inheritDoc}
     */
    public function setInstagram(?string $instagram): \App\Entity\Media
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInstagram', [$instagram]);

        return parent::setInstagram($instagram);
    }

    /**
     * {@inheritDoc}
     */
    public function getInstagramFollowersCount(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInstagramFollowersCount', []);

        return parent::getInstagramFollowersCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setInstagramFollowersCount(int $instagramFollowersCount): \App\Entity\Media
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInstagramFollowersCount', [$instagramFollowersCount]);

        return parent::setInstagramFollowersCount($instagramFollowersCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getYoutube(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYoutube', []);

        return parent::getYoutube();
    }

    /**
     * {@inheritDoc}
     */
    public function setYoutube(?string $youtube): \App\Entity\Media
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setYoutube', [$youtube]);

        return parent::setYoutube($youtube);
    }

    /**
     * {@inheritDoc}
     */
    public function getYoutubeFollowersCount(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYoutubeFollowersCount', []);

        return parent::getYoutubeFollowersCount();
    }

    /**
     * {@inheritDoc}
     */
    public function setYoutubeFollowersCount(int $youtubeFollowersCount): \App\Entity\Media
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setYoutubeFollowersCount', [$youtubeFollowersCount]);

        return parent::setYoutubeFollowersCount($youtubeFollowersCount);
    }

    /**
     * {@inheritDoc}
     */
    public function getCountry(): ?\App\Entity\Country
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountry', []);

        return parent::getCountry();
    }

    /**
     * {@inheritDoc}
     */
    public function setCountry(?\App\Entity\Country $country): \App\Entity\Media
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountry', [$country]);

        return parent::setCountry($country);
    }

    /**
     * {@inheritDoc}
     */
    public function getLanguage(): ?\App\Entity\Language
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLanguage', []);

        return parent::getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    public function setLanguage(?\App\Entity\Language $language): \App\Entity\Media
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLanguage', [$language]);

        return parent::setLanguage($language);
    }

    /**
     * {@inheritDoc}
     */
    public function getFileName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFileName', []);

        return parent::getFileName();
    }

    /**
     * {@inheritDoc}
     */
    public function setFileName(string $file_name): \App\Entity\Media
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFileName', [$file_name]);

        return parent::setFileName($file_name);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', []);

        return parent::getImage();
    }

    /**
     * {@inheritDoc}
     */
    public function getDomain(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDomain', []);

        return parent::getDomain();
    }

    /**
     * {@inheritDoc}
     */
    public function setDomain(string $domain): \App\Entity\Media
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDomain', [$domain]);

        return parent::setDomain($domain);
    }

    /**
     * {@inheritDoc}
     */
    public function getInterests(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInterests', []);

        return parent::getInterests();
    }

    /**
     * {@inheritDoc}
     */
    public function addInterest(\App\Entity\MediaInterest $interest): \App\Entity\Media
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addInterest', [$interest]);

        return parent::addInterest($interest);
    }

    /**
     * {@inheritDoc}
     */
    public function removeInterest(\App\Entity\MediaInterest $interest): \App\Entity\Media
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeInterest', [$interest]);

        return parent::removeInterest($interest);
    }

    /**
     * {@inheritDoc}
     */
    public function getLanguages(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLanguages', []);

        return parent::getLanguages();
    }

    /**
     * {@inheritDoc}
     */
    public function addLanguage(\App\Entity\MediaLanguages $language): \App\Entity\Media
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLanguage', [$language]);

        return parent::addLanguage($language);
    }

    /**
     * {@inheritDoc}
     */
    public function removeLanguage(\App\Entity\MediaLanguages $language): \App\Entity\Media
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeLanguage', [$language]);

        return parent::removeLanguage($language);
    }

    /**
     * {@inheritDoc}
     */
    public function getGeographicalSystems(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGeographicalSystems', []);

        return parent::getGeographicalSystems();
    }

    /**
     * {@inheritDoc}
     */
    public function addGeographicalSystem(\App\Entity\MediaGeographicalSystem $geographicalSystem): \App\Entity\Media
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addGeographicalSystem', [$geographicalSystem]);

        return parent::addGeographicalSystem($geographicalSystem);
    }

    /**
     * {@inheritDoc}
     */
    public function removeGeographicalSystem(\App\Entity\MediaGeographicalSystem $geographicalSystem): \App\Entity\Media
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeGeographicalSystem', [$geographicalSystem]);

        return parent::removeGeographicalSystem($geographicalSystem);
    }

    /**
     * {@inheritDoc}
     */
    public function getSocialNetworks(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSocialNetworks', []);

        return parent::getSocialNetworks();
    }

    /**
     * {@inheritDoc}
     */
    public function getParent(): ?\App\Entity\Media
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParent', []);

        return parent::getParent();
    }

    /**
     * {@inheritDoc}
     */
    public function setParent(?\App\Entity\Media $parent): \App\Entity\Media
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParent', [$parent]);

        return parent::setParent($parent);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus(string $status): \App\Entity\Media
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

}
