<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Link extends \App\Entity\Link implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'title', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'link', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'media_id', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'file_name', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'geographical_scope', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'orientation', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'category_id', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'user_id', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'compaign_id', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'language_id', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'country_id', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'domain', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'lang', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'published_on', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'media', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'category', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'user', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'compaign', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'language', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'status'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'title', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'link', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'media_id', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'file_name', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'geographical_scope', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'orientation', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'category_id', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'user_id', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'compaign_id', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'language_id', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'country_id', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'domain', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'lang', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'published_on', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'media', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'category', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'user', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'compaign', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'language', '' . "\0" . 'App\\Entity\\Link' . "\0" . 'status'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Link $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle(string $title): \App\Entity\Link
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getLink(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLink', []);

        return parent::getLink();
    }

    /**
     * {@inheritDoc}
     */
    public function setLink(string $link): \App\Entity\Link
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLink', [$link]);

        return parent::setLink($link);
    }

    /**
     * {@inheritDoc}
     */
    public function getMediaId(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMediaId', []);

        return parent::getMediaId();
    }

    /**
     * {@inheritDoc}
     */
    public function setMediaId(?int $media_id): \App\Entity\Link
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMediaId', [$media_id]);

        return parent::setMediaId($media_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getFileName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFileName', []);

        return parent::getFileName();
    }

    /**
     * {@inheritDoc}
     */
    public function setFileName(?string $file_name): \App\Entity\Link
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFileName', [$file_name]);

        return parent::setFileName($file_name);
    }

    /**
     * {@inheritDoc}
     */
    public function getAttachment(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAttachment', []);

        return parent::getAttachment();
    }

    /**
     * {@inheritDoc}
     */
    public function getGeographicalScope(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGeographicalScope', []);

        return parent::getGeographicalScope();
    }

    /**
     * {@inheritDoc}
     */
    public function setGeographicalScope(string $geographical_scope): \App\Entity\Link
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGeographicalScope', [$geographical_scope]);

        return parent::setGeographicalScope($geographical_scope);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrientation(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrientation', []);

        return parent::getOrientation();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrientation(string $orientation): \App\Entity\Link
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrientation', [$orientation]);

        return parent::setOrientation($orientation);
    }

    /**
     * {@inheritDoc}
     */
    public function getDomain(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDomain', []);

        return parent::getDomain();
    }

    /**
     * {@inheritDoc}
     */
    public function setDomain(string $domain): \App\Entity\Link
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDomain', [$domain]);

        return parent::setDomain($domain);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategoryId(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategoryId', []);

        return parent::getCategoryId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategoryId(int $category_id): \App\Entity\Link
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategoryId', [$category_id]);

        return parent::setCategoryId($category_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getLang(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLang', []);

        return parent::getLang();
    }

    /**
     * {@inheritDoc}
     */
    public function setLang(string $lang): \App\Entity\Link
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLang', [$lang]);

        return parent::setLang($lang);
    }

    /**
     * {@inheritDoc}
     */
    public function getLanguageId(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLanguageId', []);

        return parent::getLanguageId();
    }

    /**
     * {@inheritDoc}
     */
    public function setLanguageId(?int $language_id): \App\Entity\Link
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLanguageId', [$language_id]);

        return parent::setLanguageId($language_id);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublishedOn(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublishedOn', []);

        return parent::getPublishedOn();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublishedOn(\DateTimeInterface $published_on): \App\Entity\Link
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublishedOn', [$published_on]);

        return parent::setPublishedOn($published_on);
    }

    /**
     * {@inheritDoc}
     */
    public function getMedia(): ?\App\Entity\Media
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMedia', []);

        return parent::getMedia();
    }

    /**
     * {@inheritDoc}
     */
    public function setMedia(?\App\Entity\Media $media): \App\Entity\Link
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMedia', [$media]);

        return parent::setMedia($media);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory(): ?\App\Entity\Category
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', []);

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategory(?\App\Entity\Category $category): \App\Entity\Link
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', [$category]);

        return parent::setCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(?\App\Entity\User $user): \App\Entity\Link
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompaign(): ?\App\Entity\Compaign
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompaign', []);

        return parent::getCompaign();
    }

    /**
     * {@inheritDoc}
     */
    public function setCompaign(?\App\Entity\Compaign $compaign): \App\Entity\Link
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompaign', [$compaign]);

        return parent::setCompaign($compaign);
    }

    /**
     * {@inheritDoc}
     */
    public function getLanguage(): ?\App\Entity\Language
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLanguage', []);

        return parent::getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    public function setLanguage(?\App\Entity\Language $language): \App\Entity\Link
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLanguage', [$language]);

        return parent::setLanguage($language);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function extractDomain()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'extractDomain', []);

        return parent::extractDomain();
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus(string $status): \App\Entity\Link
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

}
